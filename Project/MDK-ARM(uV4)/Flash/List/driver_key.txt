; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\driver_key.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\driver_key.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\User_App -I..\..\User\User_Driver -I..\..\User\Font_And_Bmp -I..\..\User\User_GUI -I..\..\User\Util -I.\RTE\_FreeRTOS_STM32F1 -I"D:\Keil MDK\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include" -I"D:\Keil MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\driver_key.crf ..\..\User\User_Driver\driver_key.c]
                          THUMB

                          AREA ||i.driverKeyDetection||, CODE, READONLY, ALIGN=2

                  driverKeyDetection PROC
;;;82     }
;;;83     uint8_t driverKeyDetection(uint8_t mode)
000000  b500              PUSH     {lr}
;;;84     {
;;;85     	static uint8_t keyPress = PRESS;
;;;86     	if(mode) keyPress = PRESS;
000002  491a              LDR      r1,|L1.108|
000004  2800              CMP      r0,#0
000006  d001              BEQ      |L1.12|
000008  2000              MOVS     r0,#0
00000a  7008              STRB     r0,[r1,#0]
                  |L1.12|
;;;87     	if(keyPress == PRESS){
00000c  7808              LDRB     r0,[r1,#0]  ; keyPress
00000e  b108              CBZ      r0,|L1.20|
;;;88     		keyPress = NO_PRESS;
;;;89     		if(driverKeyReturn(&key.nowState.enter,&key.keepTime[KEY_ENTER])){
;;;90     			return KEY_ENTER;
;;;91     		}
;;;92     		else if(driverKeyReturn(&key.nowState.up,&key.keepTime[KEY_UP])){
;;;93     			return KEY_UP;
;;;94     		}
;;;95     		else if(driverKeyReturn(&key.nowState.down,&key.keepTime[KEY_DOWN])){
;;;96     			return KEY_DOWN;
;;;97     		}
;;;98     		else if(driverKeyReturn(&key.nowState.back,&key.keepTime[KEY_BACK])){
;;;99     			return KEY_BACK;
;;;100    		}
;;;101    		else if(driverKeyReturn(&key.nowState.save,&key.keepTime[KEY_SAVE])){
;;;102    			return KEY_SAVE;
;;;103    		}
;;;104    		else return KEY_NULL;
;;;105    	}
;;;106    	return KEY_NULL;
000010  2000              MOVS     r0,#0
;;;107    }
000012  bd00              POP      {pc}
                  |L1.20|
000014  2001              MOVS     r0,#1                 ;88
000016  7008              STRB     r0,[r1,#0]            ;88
000018  4b15              LDR      r3,|L1.112|
00001a  1d99              ADDS     r1,r3,#6              ;89
00001c  4618              MOV      r0,r3                 ;89
00001e  f7fffffe          BL       driverKeyReturn
000022  b108              CBZ      r0,|L1.40|
000024  2001              MOVS     r0,#1                 ;90
000026  bd00              POP      {pc}
                  |L1.40|
000028  1dd9              ADDS     r1,r3,#7              ;92
00002a  1c58              ADDS     r0,r3,#1              ;92
00002c  f7fffffe          BL       driverKeyReturn
000030  b108              CBZ      r0,|L1.54|
000032  2002              MOVS     r0,#2                 ;93
000034  bd00              POP      {pc}
                  |L1.54|
000036  490e              LDR      r1,|L1.112|
000038  1c98              ADDS     r0,r3,#2              ;95
00003a  3108              ADDS     r1,r1,#8              ;95
00003c  f7fffffe          BL       driverKeyReturn
000040  b108              CBZ      r0,|L1.70|
000042  2003              MOVS     r0,#3                 ;96
000044  bd00              POP      {pc}
                  |L1.70|
000046  490a              LDR      r1,|L1.112|
000048  1cd8              ADDS     r0,r3,#3              ;98
00004a  3109              ADDS     r1,r1,#9              ;98
00004c  f7fffffe          BL       driverKeyReturn
000050  b108              CBZ      r0,|L1.86|
000052  2004              MOVS     r0,#4                 ;99
000054  bd00              POP      {pc}
                  |L1.86|
000056  4906              LDR      r1,|L1.112|
000058  1d18              ADDS     r0,r3,#4              ;101
00005a  310a              ADDS     r1,r1,#0xa            ;101
00005c  f7fffffe          BL       driverKeyReturn
000060  b108              CBZ      r0,|L1.102|
000062  2005              MOVS     r0,#5                 ;102
000064  bd00              POP      {pc}
                  |L1.102|
000066  2000              MOVS     r0,#0                 ;104
000068  bd00              POP      {pc}
;;;108    
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      ||.data||
                  |L1.112|
                          DCD      ||.bss||

                          AREA ||i.driverKeyNowStateUpdate||, CODE, READONLY, ALIGN=2

                  driverKeyNowStateUpdate PROC
;;;108    
;;;109    void driverKeyNowStateUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;110    {
;;;111    	key.nowState.enter = (keyValue_e)GPIO_ReadInputDataBit( KEY_ENTER_PORT, KEY_ENTER_PIN);
000002  4d10              LDR      r5,|L2.68|
000004  2104              MOVS     r1,#4
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GPIO_ReadInputDataBit
00000c  4c0e              LDR      r4,|L2.72|
00000e  7020              STRB     r0,[r4,#0]
;;;112    	key.nowState.back = (keyValue_e)GPIO_ReadInputDataBit( KEY_BACK_PORT, KEY_BACK_PIN);
000010  2102              MOVS     r1,#2
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GPIO_ReadInputDataBit
000018  70e0              STRB     r0,[r4,#3]
;;;113    	key.nowState.up = (keyValue_e)GPIO_ReadInputDataBit( KEY_UP_PORT, KEY_UP_PIN);
00001a  2120              MOVS     r1,#0x20
00001c  480b              LDR      r0,|L2.76|
00001e  f7fffffe          BL       GPIO_ReadInputDataBit
000022  7060              STRB     r0,[r4,#1]
;;;114    	key.nowState.down = (keyValue_e)GPIO_ReadInputDataBit( KEY_DOWN_PORT, KEY_DOWN_PIN);
000024  2108              MOVS     r1,#8
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GPIO_ReadInputDataBit
00002c  70a0              STRB     r0,[r4,#2]
;;;115    	key.nowState.save = (keyValue_e)GPIO_ReadInputDataBit( KEY_SAVE_PORT, KEY_SAVE_PIN);	
00002e  2101              MOVS     r1,#1
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GPIO_ReadInputDataBit
000036  7120              STRB     r0,[r4,#4]
;;;116    	
;;;117    	key.realValue = driverKeyDetection(1);
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       driverKeyDetection
00003e  72e0              STRB     r0,[r4,#0xb]
;;;118    }
000040  bd70              POP      {r4-r6,pc}
;;;119    
                          ENDP

000042  0000              DCW      0x0000
                  |L2.68|
                          DCD      0x40011800
                  |L2.72|
                          DCD      ||.bss||
                  |L2.76|
                          DCD      0x40010800

                          AREA ||i.driverKeyReturn||, CODE, READONLY, ALIGN=1

                  driverKeyReturn PROC
;;;59     
;;;60     uint8_t driverKeyReturn(keyValue_e* key,uint8_t* keepTime)
000000  4602              MOV      r2,r0
;;;61     {
;;;62     	uint8_t keyOutputValue = NULL;
000002  2000              MOVS     r0,#0
;;;63     	switch(*key){
000004  7812              LDRB     r2,[r2,#0]
000006  2a00              CMP      r2,#0
000008  d002              BEQ      |L3.16|
00000a  2a01              CMP      r2,#1
00000c  d106              BNE      |L3.28|
00000e  e003              B        |L3.24|
                  |L3.16|
;;;64     	  case PRESS:{
;;;65     			*keepTime += 1;
000010  780a              LDRB     r2,[r1,#0]
000012  1c52              ADDS     r2,r2,#1
000014  700a              STRB     r2,[r1,#0]
;;;66     			break;
000016  e001              B        |L3.28|
                  |L3.24|
;;;67     		}
;;;68     		case NO_PRESS:{
;;;69     			*keepTime = NULL;
000018  2200              MOVS     r2,#0
00001a  700a              STRB     r2,[r1,#0]
                  |L3.28|
;;;70     			break;
;;;71     		}
;;;72     	}
;;;73     	
;;;74     	if(*keepTime <= SMOOTHING_TIME){
00001c  7809              LDRB     r1,[r1,#0]
00001e  290a              CMP      r1,#0xa
000020  d900              BLS      |L3.36|
;;;75     		keyOutputValue = NULL;
;;;76     	}
;;;77     	else{
;;;78     		keyOutputValue = 1;
000022  2001              MOVS     r0,#1
                  |L3.36|
;;;79     	}
;;;80     	
;;;81     	return keyOutputValue;
;;;82     }
000024  4770              BX       lr
;;;83     uint8_t driverKeyDetection(uint8_t mode)
                          ENDP


                          AREA ||i.driver_InitKeyHard||, CODE, READONLY, ALIGN=2

                  driver_InitKeyHard PROC
;;;32     */
;;;33     void driver_InitKeyHard(void)
000000  b538              PUSH     {r3-r5,lr}
;;;34     {
;;;35     	GPIO_InitTypeDef GPIO_InitStructure;
;;;36     
;;;37     	/* 第1步：打开GPIO时钟 */
;;;38     	RCC_APB2PeriphClockCmd(RCC_ALL_KEY, ENABLE);
000002  2101              MOVS     r1,#1
000004  2064              MOVS     r0,#0x64
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;39     
;;;40     	/* 第2步：配置所有的按键GPIO为浮动输入模式(实际上CPU复位后就是输入状态) */
;;;41     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00000a  2003              MOVS     r0,#3
00000c  f88d0002          STRB     r0,[sp,#2]
;;;42     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;	/* 输入浮空模式 */
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;43     	
;;;44     	GPIO_InitStructure.GPIO_Pin = KEY_ENTER_PIN;
000016  2004              MOVS     r0,#4
000018  f8ad0000          STRH     r0,[sp,#0]
;;;45     	GPIO_Init(KEY_ENTER_PORT, &GPIO_InitStructure);
00001c  4c10              LDR      r4,|L4.96|
00001e  4669              MOV      r1,sp
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       GPIO_Init
;;;46     
;;;47     	GPIO_InitStructure.GPIO_Pin = KEY_BACK_PIN;
000026  2102              MOVS     r1,#2
000028  f8ad1000          STRH     r1,[sp,#0]
;;;48     	GPIO_Init(KEY_BACK_PORT, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       GPIO_Init
;;;49     	
;;;50     	GPIO_InitStructure.GPIO_Pin = KEY_UP_PIN;
000034  2120              MOVS     r1,#0x20
000036  f8ad1000          STRH     r1,[sp,#0]
;;;51     	GPIO_Init(KEY_UP_PORT, &GPIO_InitStructure);
00003a  4669              MOV      r1,sp
00003c  4809              LDR      r0,|L4.100|
00003e  f7fffffe          BL       GPIO_Init
;;;52     	
;;;53     	GPIO_InitStructure.GPIO_Pin = KEY_DOWN_PIN;
000042  2108              MOVS     r1,#8
000044  f8ad1000          STRH     r1,[sp,#0]
;;;54     	GPIO_Init(KEY_DOWN_PORT, &GPIO_InitStructure);
000048  4669              MOV      r1,sp
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       GPIO_Init
;;;55     
;;;56     	GPIO_InitStructure.GPIO_Pin = KEY_SAVE_PIN;
000050  2101              MOVS     r1,#1
000052  f8ad1000          STRH     r1,[sp,#0]
;;;57     	GPIO_Init(KEY_SAVE_PORT, &GPIO_InitStructure);
000056  4669              MOV      r1,sp
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       GPIO_Init
;;;58     }
00005e  bd38              POP      {r3-r5,pc}
;;;59     
                          ENDP

                  |L4.96|
                          DCD      0x40011800
                  |L4.100|
                          DCD      0x40010800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  key
                          %        12

                          AREA ||.data||, DATA, ALIGN=0

                  keyPress
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\User_Driver\\driver_key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_driver_key_c_77300746____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_driver_key_c_77300746____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_driver_key_c_77300746____REVSH|
#line 128
|__asm___12_driver_key_c_77300746____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
