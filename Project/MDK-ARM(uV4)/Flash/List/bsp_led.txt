; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\User_App -I..\..\User\User_Driver -I..\..\User\Font_And_Bmp -I..\..\User\User_GUI -I..\..\User\Util -I.\RTE\_FreeRTOS_STM32F1 -I"D:\Keil MDK\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include" -I"D:\Keil MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;51     */
;;;52     void bsp_InitLed(void)
000000  b538              PUSH     {r3-r5,lr}
;;;53     {
;;;54     	GPIO_InitTypeDef GPIO_InitStructure;
;;;55     
;;;56     	/* 打开GPIO时钟 */
;;;57     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2080              MOVS     r0,#0x80
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     
;;;59     	/*
;;;60     		配置所有的LED指示灯GPIO为推挽输出模式
;;;61     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;62     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;63     	*/
;;;64     	bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;65     	bsp_LedOff(2);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       bsp_LedOff
;;;66     	bsp_LedOff(3);
000016  2003              MOVS     r0,#3
000018  f7fffffe          BL       bsp_LedOff
;;;67     	bsp_LedOff(4);
00001c  2004              MOVS     r0,#4
00001e  f7fffffe          BL       bsp_LedOff
;;;68     
;;;69     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0002          STRB     r0,[sp,#2]
;;;70     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000028  2010              MOVS     r0,#0x10
00002a  f88d0003          STRB     r0,[sp,#3]
;;;71     	
;;;72     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00002e  01c0              LSLS     r0,r0,#7
000030  f8ad0000          STRH     r0,[sp,#0]
;;;73     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000034  4c0d              LDR      r4,|L1.108|
000036  4669              MOV      r1,sp
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       GPIO_Init
;;;74     
;;;75     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
00003e  2180              MOVS     r1,#0x80
000040  f8ad1000          STRH     r1,[sp,#0]
;;;76     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
000044  4669              MOV      r1,sp
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       GPIO_Init
;;;77     
;;;78     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
00004c  15a1              ASRS     r1,r4,#22
00004e  f8ad1000          STRH     r1,[sp,#0]
;;;79     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
000052  4669              MOV      r1,sp
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       GPIO_Init
;;;80     
;;;81     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
00005a  1561              ASRS     r1,r4,#21
00005c  f8ad1000          STRH     r1,[sp,#0]
;;;82     	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
000060  4669              MOV      r1,sp
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       GPIO_Init
;;;83     }
000068  bd38              POP      {r3-r5,pc}
;;;84     
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      0x40011c00

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;180    */
;;;181    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4913              LDR      r1,|L2.80|
;;;182    {
;;;183    	if (_no == 1)
000002  2801              CMP      r0,#1
000004  d007              BEQ      |L2.22|
;;;184    	{
;;;185    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
;;;186    		{
;;;187    			return 1;
;;;188    		}
;;;189    		return 0;
;;;190    	}
;;;191    	else if (_no == 2)
000006  2802              CMP      r0,#2
000008  d00c              BEQ      |L2.36|
;;;192    	{
;;;193    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;194    		{
;;;195    			return 1;
;;;196    		}
;;;197    		return 0;
;;;198    	}
;;;199    	else if (_no == 3)
00000a  2803              CMP      r0,#3
00000c  d011              BEQ      |L2.50|
;;;200    	{
;;;201    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;202    		{
;;;203    			return 1;
;;;204    		}
;;;205    		return 0;
;;;206    	}
;;;207    	else if (_no == 4)
00000e  2804              CMP      r0,#4
000010  d016              BEQ      |L2.64|
;;;208    	{
;;;209    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;210    		{
;;;211    			return 1;
;;;212    		}
;;;213    		return 0;
;;;214    	}
;;;215    
;;;216    	return 0;
000012  2000              MOVS     r0,#0
;;;217    }
000014  4770              BX       lr
                  |L2.22|
000016  6808              LDR      r0,[r1,#0]            ;185
000018  0500              LSLS     r0,r0,#20             ;185
00001a  d401              BMI      |L2.32|
00001c  2001              MOVS     r0,#1                 ;187
00001e  4770              BX       lr
                  |L2.32|
000020  2000              MOVS     r0,#0                 ;189
000022  4770              BX       lr
                  |L2.36|
000024  6808              LDR      r0,[r1,#0]            ;193
000026  0600              LSLS     r0,r0,#24             ;193
000028  d401              BMI      |L2.46|
00002a  2001              MOVS     r0,#1                 ;195
00002c  4770              BX       lr
                  |L2.46|
00002e  2000              MOVS     r0,#0                 ;197
000030  4770              BX       lr
                  |L2.50|
000032  6808              LDR      r0,[r1,#0]            ;201
000034  05c0              LSLS     r0,r0,#23             ;201
000036  d401              BMI      |L2.60|
000038  2001              MOVS     r0,#1                 ;203
00003a  4770              BX       lr
                  |L2.60|
00003c  2000              MOVS     r0,#0                 ;205
00003e  4770              BX       lr
                  |L2.64|
000040  6808              LDR      r0,[r1,#0]            ;209
000042  0580              LSLS     r0,r0,#22             ;209
000044  d401              BMI      |L2.74|
000046  2001              MOVS     r0,#1                 ;211
000048  4770              BX       lr
                  |L2.74|
00004a  2000              MOVS     r0,#0                 ;213
00004c  4770              BX       lr
;;;218    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      0x40011c0c

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;122    */
;;;123    void bsp_LedOff(uint8_t _no)
000000  1e40              SUBS     r0,r0,#1
;;;124    {
;;;125    	_no--;
000002  b2c0              UXTB     r0,r0
;;;126    
;;;127    	if (_no == 0)
;;;128    	{
;;;129    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000004  490b              LDR      r1,|L3.52|
000006  2800              CMP      r0,#0                 ;127
000008  d008              BEQ      |L3.28|
;;;130    	}
;;;131    	else if (_no == 1)
00000a  2801              CMP      r0,#1
00000c  d00a              BEQ      |L3.36|
;;;132    	{
;;;133    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
;;;134    	}
;;;135    	else if (_no == 2)
00000e  2802              CMP      r0,#2
000010  d00b              BEQ      |L3.42|
;;;136    	{
;;;137    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
;;;138    	}
;;;139    	else if (_no == 3)
000012  2803              CMP      r0,#3
000014  d101              BNE      |L3.26|
;;;140    	{
;;;141    		GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
000016  1548              ASRS     r0,r1,#21
000018  6008              STR      r0,[r1,#0]
                  |L3.26|
;;;142    	}
;;;143    }
00001a  4770              BX       lr
                  |L3.28|
00001c  f44f6000          MOV      r0,#0x800             ;129
000020  6008              STR      r0,[r1,#0]            ;129
000022  4770              BX       lr
                  |L3.36|
000024  2080              MOVS     r0,#0x80              ;133
000026  6008              STR      r0,[r1,#0]            ;133
000028  4770              BX       lr
                  |L3.42|
00002a  f44f7080          MOV      r0,#0x100             ;137
00002e  6008              STR      r0,[r1,#0]            ;137
000030  4770              BX       lr
;;;144    
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40011c10

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;92     */
;;;93     void bsp_LedOn(uint8_t _no)
000000  1e40              SUBS     r0,r0,#1
;;;94     {
;;;95     	_no--;
000002  b2c0              UXTB     r0,r0
;;;96     
;;;97     	if (_no == 0)
;;;98     	{
;;;99     		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000004  490b              LDR      r1,|L4.52|
000006  2800              CMP      r0,#0                 ;97
000008  d008              BEQ      |L4.28|
;;;100    	}
;;;101    	else if (_no == 1)
00000a  2801              CMP      r0,#1
00000c  d00a              BEQ      |L4.36|
;;;102    	{
;;;103    		GPIO_PORT_LED2->BRR = GPIO_PIN_LED2;
;;;104    	}
;;;105    	else if (_no == 2)
00000e  2802              CMP      r0,#2
000010  d00b              BEQ      |L4.42|
;;;106    	{
;;;107    		GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
;;;108    	}
;;;109    	else if (_no == 3)
000012  2803              CMP      r0,#3
000014  d101              BNE      |L4.26|
;;;110    	{
;;;111    		GPIO_PORT_LED4->BRR = GPIO_PIN_LED4;
000016  1548              ASRS     r0,r1,#21
000018  6008              STR      r0,[r1,#0]
                  |L4.26|
;;;112    	}
;;;113    }
00001a  4770              BX       lr
                  |L4.28|
00001c  f44f6000          MOV      r0,#0x800             ;99
000020  6008              STR      r0,[r1,#0]            ;99
000022  4770              BX       lr
                  |L4.36|
000024  2080              MOVS     r0,#0x80              ;103
000026  6008              STR      r0,[r1,#0]            ;103
000028  4770              BX       lr
                  |L4.42|
00002a  f44f7080          MOV      r0,#0x100             ;107
00002e  6008              STR      r0,[r1,#0]            ;107
000030  4770              BX       lr
;;;114    
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      0x40011c14

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;152    */
;;;153    void bsp_LedToggle(uint8_t _no)
000000  490e              LDR      r1,|L5.60|
;;;154    {
;;;155    	if (_no == 1)
000002  2801              CMP      r0,#1
000004  d00a              BEQ      |L5.28|
;;;156    	{
;;;157    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
;;;158    	}
;;;159    	else if (_no == 2)
000006  2802              CMP      r0,#2
000008  d00d              BEQ      |L5.38|
;;;160    	{
;;;161    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
;;;162    	}
;;;163    	else if (_no == 3)
00000a  2803              CMP      r0,#3
00000c  d010              BEQ      |L5.48|
;;;164    	{
;;;165    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
;;;166    	}
;;;167    	else if (_no == 4)
00000e  2804              CMP      r0,#4
000010  d103              BNE      |L5.26|
;;;168    	{
;;;169    		GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
000012  6808              LDR      r0,[r1,#0]
000014  f4807000          EOR      r0,r0,#0x200
000018  6008              STR      r0,[r1,#0]
                  |L5.26|
;;;170    	}
;;;171    }
00001a  4770              BX       lr
                  |L5.28|
00001c  6808              LDR      r0,[r1,#0]            ;157
00001e  f4806000          EOR      r0,r0,#0x800          ;157
000022  6008              STR      r0,[r1,#0]            ;157
000024  4770              BX       lr
                  |L5.38|
000026  6808              LDR      r0,[r1,#0]            ;161
000028  f0800080          EOR      r0,r0,#0x80           ;161
00002c  6008              STR      r0,[r1,#0]            ;161
00002e  4770              BX       lr
                  |L5.48|
000030  6808              LDR      r0,[r1,#0]            ;165
000032  f4807080          EOR      r0,r0,#0x100          ;165
000036  6008              STR      r0,[r1,#0]            ;165
000038  4770              BX       lr
;;;172    
                          ENDP

00003a  0000              DCW      0x0000
                  |L5.60|
                          DCD      0x40011c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
