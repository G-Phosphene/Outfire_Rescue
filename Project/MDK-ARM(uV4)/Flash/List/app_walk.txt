; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\app_walk.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\app_walk.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\User_App -I..\..\User\User_Driver -I..\..\User\Font_And_Bmp -I..\..\User\User_GUI -I..\..\User\Util -I.\RTE\_FreeRTOS_STM32F1 -I"D:\Keil MDK\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include" -I"D:\Keil MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\app_walk.crf ..\..\User\User_App\app_walk.c]
                          THUMB

                          AREA ||i.app_CAMERA_UPorDOWN||, CODE, READONLY, ALIGN=1

                  app_CAMERA_UPorDOWN PROC
;;;55     }
;;;56     void app_CAMERA_UPorDOWN(uint8_t mode,uint32_t rata){//相机1上2下
000000  f04f4280          MOV      r2,#0x40000000
;;;57     		if(mode==1){
000004  2801              CMP      r0,#1
000006  d007              BEQ      |L1.24|
;;;58     	TIM_SetCompare1(TIM2,rata);
;;;59     	}
;;;60     	else if (mode==2){
000008  2802              CMP      r0,#2
00000a  d009              BEQ      |L1.32|
;;;61     	TIM_SetCompare1(TIM2,rata);
;;;62     	}
;;;63     		else if(mode==0){
00000c  2800              CMP      r0,#0
00000e  d10b              BNE      |L1.40|
;;;64     	TIM_SetCompare1(TIM2,0);
000010  2100              MOVS     r1,#0
000012  4610              MOV      r0,r2
000014  f7ffbffe          B.W      TIM_SetCompare1
                  |L1.24|
000018  b289              UXTH     r1,r1                 ;58
00001a  4610              MOV      r0,r2                 ;58
00001c  f7ffbffe          B.W      TIM_SetCompare1
                  |L1.32|
000020  b289              UXTH     r1,r1                 ;61
000022  4610              MOV      r0,r2                 ;61
000024  f7ffbffe          B.W      TIM_SetCompare1
                  |L1.40|
;;;65     	}
;;;66     }
000028  4770              BX       lr
;;;67     
                          ENDP


                          AREA ||i.app_CLAW_HOLDorUNON||, CODE, READONLY, ALIGN=2

                  app_CLAW_HOLDorUNON PROC
;;;44     }
;;;45     void app_CLAW_HOLDorUNON(uint8_t mode,uint32_t rata){	//爪子3紧4松
000000  4a09              LDR      r2,|L2.40|
;;;46     		if(mode==claw_HOLD){
000002  2803              CMP      r0,#3
000004  d007              BEQ      |L2.22|
;;;47     	TIM_SetCompare4(TIM3,rata);   
;;;48     	}
;;;49     	else if (mode==claw_UNON){
000006  2804              CMP      r0,#4
000008  d009              BEQ      |L2.30|
;;;50     	TIM_SetCompare4(TIM3,rata);
;;;51     	}
;;;52     	else if(mode==0){
00000a  2800              CMP      r0,#0
00000c  d10b              BNE      |L2.38|
;;;53     	TIM_SetCompare4(TIM3,0);
00000e  2100              MOVS     r1,#0
000010  4610              MOV      r0,r2
000012  f7ffbffe          B.W      TIM_SetCompare4
                  |L2.22|
000016  b289              UXTH     r1,r1                 ;47
000018  4610              MOV      r0,r2                 ;47
00001a  f7ffbffe          B.W      TIM_SetCompare4
                  |L2.30|
00001e  b289              UXTH     r1,r1                 ;50
000020  4610              MOV      r0,r2                 ;50
000022  f7ffbffe          B.W      TIM_SetCompare4
                  |L2.38|
;;;54     	}
;;;55     }
000026  4770              BX       lr
;;;56     void app_CAMERA_UPorDOWN(uint8_t mode,uint32_t rata){//相机1上2下
                          ENDP

                  |L2.40|
                          DCD      0x40000400

                          AREA ||i.app_CLAW_UPorDOWN||, CODE, READONLY, ALIGN=2

                  app_CLAW_UPorDOWN PROC
;;;33     
;;;34     void app_CLAW_UPorDOWN(uint8_t mode,uint32_t rata){//爪子1上2下
000000  4a09              LDR      r2,|L3.40|
;;;35     	if(mode==claw_UP){
000002  2801              CMP      r0,#1
000004  d007              BEQ      |L3.22|
;;;36     	TIM_SetCompare3(TIM3,rata);
;;;37     	}
;;;38     	else if (mode==claw_DOWN){
000006  2802              CMP      r0,#2
000008  d009              BEQ      |L3.30|
;;;39     	TIM_SetCompare3(TIM3,rata);
;;;40     	}
;;;41     		else if(mode==0){
00000a  2800              CMP      r0,#0
00000c  d10b              BNE      |L3.38|
;;;42     	TIM_SetCompare3(TIM3,0);
00000e  2100              MOVS     r1,#0
000010  4610              MOV      r0,r2
000012  f7ffbffe          B.W      TIM_SetCompare3
                  |L3.22|
000016  b289              UXTH     r1,r1                 ;36
000018  4610              MOV      r0,r2                 ;36
00001a  f7ffbffe          B.W      TIM_SetCompare3
                  |L3.30|
00001e  b289              UXTH     r1,r1                 ;39
000020  4610              MOV      r0,r2                 ;39
000022  f7ffbffe          B.W      TIM_SetCompare3
                  |L3.38|
;;;43     	}
;;;44     }
000026  4770              BX       lr
;;;45     void app_CLAW_HOLDorUNON(uint8_t mode,uint32_t rata){	//爪子3紧4松
                          ENDP

                  |L3.40|
                          DCD      0x40000400

                          AREA ||i.app_LeftWheel||, CODE, READONLY, ALIGN=2

                  app_LeftWheel PROC
;;;16     calibrationFinish_e calibrationFinish;
;;;17     void app_LeftWheel(uint8_t mode,uint32_t rate){    //向前后左转
000000  4a08              LDR      r2,|L4.36|
;;;18     	if(mode == 1){		
;;;19     		TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]+rate);
000002  4b09              LDR      r3,|L4.40|
000004  2801              CMP      r0,#1                 ;18
000006  6ed2              LDR      r2,[r2,#0x6c]
000008  d006              BEQ      |L4.24|
;;;20     	}else if(mode == 2){
00000a  2802              CMP      r0,#2
00000c  d109              BNE      |L4.34|
;;;21     		TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]-rate);
00000e  1a50              SUBS     r0,r2,r1
000010  b281              UXTH     r1,r0
000012  4618              MOV      r0,r3
000014  f7ffbffe          B.W      TIM_SetCompare1
                  |L4.24|
000018  1850              ADDS     r0,r2,r1              ;19
00001a  b281              UXTH     r1,r0                 ;19
00001c  4618              MOV      r0,r3                 ;19
00001e  f7ffbffe          B.W      TIM_SetCompare1
                  |L4.34|
;;;22     	}
;;;23     }
000022  4770              BX       lr
;;;24     
                          ENDP

                  |L4.36|
                          DCD      parameter
                  |L4.40|
                          DCD      0x40000400

                          AREA ||i.app_RightWheel||, CODE, READONLY, ALIGN=2

                  app_RightWheel PROC
;;;24     
;;;25     void app_RightWheel(uint8_t mode,uint32_t rate){ // 右前 右后
000000  4a08              LDR      r2,|L5.36|
;;;26     	if(mode == 1){		
;;;27     		TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]-rate);
000002  4b09              LDR      r3,|L5.40|
000004  2801              CMP      r0,#1                 ;26
000006  6f12              LDR      r2,[r2,#0x70]
000008  d006              BEQ      |L5.24|
;;;28     	}else if(mode == 2){
00000a  2802              CMP      r0,#2
00000c  d109              BNE      |L5.34|
;;;29     		TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]+rate);
00000e  1850              ADDS     r0,r2,r1
000010  b281              UXTH     r1,r0
000012  4618              MOV      r0,r3
000014  f7ffbffe          B.W      TIM_SetCompare2
                  |L5.24|
000018  1a50              SUBS     r0,r2,r1              ;27
00001a  b281              UXTH     r1,r0                 ;27
00001c  4618              MOV      r0,r3                 ;27
00001e  f7ffbffe          B.W      TIM_SetCompare2
                  |L5.34|
;;;30     	}
;;;31     }
000022  4770              BX       lr
;;;32     
                          ENDP

                  |L5.36|
                          DCD      parameter
                  |L5.40|
                          DCD      0x40000400

                          AREA ||i.app_behindTurn||, CODE, READONLY, ALIGN=2

                  app_behindTurn PROC
;;;395    
;;;396    void app_behindTurn(turnDirection_e direction,uint16_t angle){
000000  b508              PUSH     {r3,lr}
;;;397    	switch(direction){
;;;398    		case LEFT :{
;;;399    			switch(angle){
;;;400    				case 45:{app_turnAngleDirection(BEHIND,parameter[NAME_TURN_LEFT__LEFT_RATE],
000002  4a0d              LDR      r2,|L6.56|
000004  2801              CMP      r0,#1                 ;397
000006  d00c              BEQ      |L6.34|
000008  2802              CMP      r0,#2                 ;397
00000a  d109              BNE      |L6.32|
;;;401    																				BEHIND,parameter[NAME_TURN_LEFT__RIGHT_RATE],
;;;402    																				parameter[NAME_BEHIND_TURN_LEFT_TIME_45]);	break;}
;;;403    				}
;;;404    				break;
;;;405    			}		
;;;406    		case RIGHT :{
;;;407    			switch(angle){
00000c  292d              CMP      r1,#0x2d
00000e  d107              BNE      |L6.32|
;;;408    				case 45:{app_turnAngleDirection(BEHIND,parameter[NAME_TURN_RIGHT__LEFT_RATE],
000010  6a90              LDR      r0,[r2,#0x28]  ; parameter
000012  9000              STR      r0,[sp,#0]
000014  e9d21313          LDRD     r1,r3,[r2,#0x4c]
000018  2202              MOVS     r2,#2
00001a  4610              MOV      r0,r2
00001c  f7fffffe          BL       app_turnAngleDirection
                  |L6.32|
;;;409    																				BEHIND,parameter[NAME_TURN_RIGHT__RIGHT_RATE],
;;;410    																				parameter[NAME_BEHIND_TURN_RIGHT_TIME_45]);	break;}
;;;411    				}
;;;412    				break;
;;;413    			}
;;;414    	}
;;;415    }
000020  bd08              POP      {r3,pc}
                  |L6.34|
000022  292d              CMP      r1,#0x2d              ;399
000024  d1fc              BNE      |L6.32|
000026  6950              LDR      r0,[r2,#0x14]         ;400  ; parameter
000028  9000              STR      r0,[sp,#0]            ;400
00002a  e9d21311          LDRD     r1,r3,[r2,#0x44]      ;400
00002e  2202              MOVS     r2,#2                 ;400
000030  4610              MOV      r0,r2                 ;400
000032  f7fffffe          BL       app_turnAngleDirection
000036  bd08              POP      {r3,pc}
;;;416    
                          ENDP

                  |L6.56|
                          DCD      parameter

                          AREA ||i.app_calibration||, CODE, READONLY, ALIGN=2

                  app_calibration PROC
;;;294    
;;;295    calibrationFinish_e app_calibration(turnDirection_e direction){      //对位函数
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;296    	float calibrationData;
;;;297    	calibrationFinish_e finshFlag;
;;;298    	finshFlag = CALIBRATION_NULL;
000004  2402              MOVS     r4,#2
;;;299    	if(direction == LEFT){    //使用左侧测量还是右侧测量
;;;300    		calibrationData = SRF_04_Data3.getDistance - SRF_04_Data4.getDistance;
;;;301    		if(calibrationData > CALIBRATION_DISTANCE) 
;;;302    		{
;;;303    			app_LeftWheel(BEHIND,2);
;;;304    			app_RightWheel(FRONT,2);
;;;305    			finshFlag = CALIBRATION_WAITING;
;;;306    		}else if(calibrationData < -CALIBRATION_DISTANCE){
;;;307    			app_LeftWheel(FRONT,2);
;;;308    			app_RightWheel(BEHIND,2);
;;;309    			finshFlag = CALIBRATION_WAITING;
;;;310    		}
;;;311    		else if(calibrationData != 0){
;;;312    			TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]);
000006  4e4b              LDR      r6,|L7.308|
000008  4f48              LDR      r7,|L7.300|
00000a  f8df8124          LDR      r8,|L7.304|
00000e  f8df9128          LDR      r9,|L7.312|
000012  6ef5              LDR      r5,[r6,#0x6c]         ;299
000014  2801              CMP      r0,#1                 ;299
000016  d004              BEQ      |L7.34|
;;;313    			TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]);
;;;314    			finshFlag = CALIBRATION_FINISHED;
;;;315    		}
;;;316    	}else if(direction == RIGHT){
000018  2802              CMP      r0,#2
00001a  d02f              BEQ      |L7.124|
;;;317    		calibrationData = SRF_04_Data5.getDistance - SRF_04_Data6.getDistance;
;;;318    		if(calibrationData > CALIBRATION_DISTANCE) 
;;;319    			{
;;;320    				app_LeftWheel(FRONT,2);
;;;321    				app_RightWheel(BEHIND,2);
;;;322    				finshFlag = CALIBRATION_WAITING;
;;;323    			}else if(calibrationData < -CALIBRATION_DISTANCE){
;;;324    				app_LeftWheel(BEHIND,2);
;;;325    				app_RightWheel(FRONT,2);
;;;326    				finshFlag = CALIBRATION_WAITING;
;;;327    			}
;;;328    			else if(calibrationData != 0){
;;;329    				TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]);
;;;330    				TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]);
;;;331    				finshFlag = CALIBRATION_FINISHED;
;;;332    			}
;;;333    	}else if(direction == NO_TURN){
00001c  2803              CMP      r0,#3
00001e  d05a              BEQ      |L7.214|
000020  e080              B        |L7.292|
                  |L7.34|
000022  4846              LDR      r0,|L7.316|
000024  6881              LDR      r1,[r0,#8]            ;300  ; SRF_04_Data4
000026  4846              LDR      r0,|L7.320|
000028  6880              LDR      r0,[r0,#8]            ;300  ; SRF_04_Data3
00002a  f7fffffe          BL       __aeabi_fsub
00002e  42b8              CMP      r0,r7                 ;301
000030  dd09              BLE      |L7.70|
000032  2102              MOVS     r1,#2                 ;303
000034  4608              MOV      r0,r1                 ;303
000036  f7fffffe          BL       app_LeftWheel
00003a  2102              MOVS     r1,#2                 ;304
00003c  2001              MOVS     r0,#1                 ;304
00003e  f7fffffe          BL       app_RightWheel
000042  2401              MOVS     r4,#1                 ;305
000044  e06e              B        |L7.292|
                  |L7.70|
000046  4540              CMP      r0,r8                 ;306
000048  d909              BLS      |L7.94|
00004a  2102              MOVS     r1,#2                 ;307
00004c  2001              MOVS     r0,#1                 ;307
00004e  f7fffffe          BL       app_LeftWheel
000052  2102              MOVS     r1,#2                 ;308
000054  4608              MOV      r0,r1                 ;308
000056  f7fffffe          BL       app_RightWheel
00005a  2401              MOVS     r4,#1                 ;309
00005c  e062              B        |L7.292|
                  |L7.94|
00005e  f0104fff          TST      r0,#0x7f800000        ;311
000062  d05f              BEQ      |L7.292|
000064  b2a9              UXTH     r1,r5                 ;312
000066  4648              MOV      r0,r9                 ;312
000068  f7fffffe          BL       TIM_SetCompare1
00006c  f8b61070          LDRH     r1,[r6,#0x70]         ;313  ; parameter
000070  4648              MOV      r0,r9                 ;313
000072  b289              UXTH     r1,r1                 ;313
000074  f7fffffe          BL       TIM_SetCompare2
000078  2400              MOVS     r4,#0                 ;314
00007a  e053              B        |L7.292|
                  |L7.124|
00007c  4831              LDR      r0,|L7.324|
00007e  6881              LDR      r1,[r0,#8]            ;317  ; SRF_04_Data6
000080  4831              LDR      r0,|L7.328|
000082  6880              LDR      r0,[r0,#8]            ;317  ; SRF_04_Data5
000084  f7fffffe          BL       __aeabi_fsub
000088  42b8              CMP      r0,r7                 ;318
00008a  dd09              BLE      |L7.160|
00008c  2102              MOVS     r1,#2                 ;320
00008e  2001              MOVS     r0,#1                 ;320
000090  f7fffffe          BL       app_LeftWheel
000094  2102              MOVS     r1,#2                 ;321
000096  4608              MOV      r0,r1                 ;321
000098  f7fffffe          BL       app_RightWheel
00009c  2401              MOVS     r4,#1                 ;322
00009e  e041              B        |L7.292|
                  |L7.160|
0000a0  4540              CMP      r0,r8                 ;323
0000a2  d909              BLS      |L7.184|
0000a4  2102              MOVS     r1,#2                 ;324
0000a6  4608              MOV      r0,r1                 ;324
0000a8  f7fffffe          BL       app_LeftWheel
0000ac  2102              MOVS     r1,#2                 ;325
0000ae  2001              MOVS     r0,#1                 ;325
0000b0  f7fffffe          BL       app_RightWheel
0000b4  2401              MOVS     r4,#1                 ;326
0000b6  e035              B        |L7.292|
                  |L7.184|
0000b8  f0104fff          TST      r0,#0x7f800000        ;328
0000bc  d032              BEQ      |L7.292|
0000be  b2a9              UXTH     r1,r5                 ;329
0000c0  4648              MOV      r0,r9                 ;329
0000c2  f7fffffe          BL       TIM_SetCompare1
0000c6  f8b61070          LDRH     r1,[r6,#0x70]         ;330  ; parameter
0000ca  4648              MOV      r0,r9                 ;330
0000cc  b289              UXTH     r1,r1                 ;330
0000ce  f7fffffe          BL       TIM_SetCompare2
0000d2  2400              MOVS     r4,#0                 ;331
0000d4  e026              B        |L7.292|
                  |L7.214|
;;;334    		calibrationData = SRF_04_Data1.getDistance - SRF_04_Data2.getDistance;
0000d6  481d              LDR      r0,|L7.332|
0000d8  6881              LDR      r1,[r0,#8]  ; SRF_04_Data2
0000da  481d              LDR      r0,|L7.336|
0000dc  6880              LDR      r0,[r0,#8]  ; SRF_04_Data1
0000de  f7fffffe          BL       __aeabi_fsub
;;;335    		if(calibrationData >CALIBRATION_DISTANCE) 
0000e2  42b8              CMP      r0,r7
0000e4  dd09              BLE      |L7.250|
;;;336    			{
;;;337    				app_LeftWheel(FRONT,4);
0000e6  2104              MOVS     r1,#4
0000e8  2001              MOVS     r0,#1
0000ea  f7fffffe          BL       app_LeftWheel
;;;338    				app_RightWheel(FRONT,7);
0000ee  2107              MOVS     r1,#7
0000f0  2001              MOVS     r0,#1
0000f2  f7fffffe          BL       app_RightWheel
;;;339    				finshFlag = CALIBRATION_WAITING;
0000f6  2401              MOVS     r4,#1
0000f8  e014              B        |L7.292|
                  |L7.250|
;;;340    			}else if(calibrationData < -CALIBRATION_DISTANCE){
0000fa  4540              CMP      r0,r8
0000fc  d909              BLS      |L7.274|
;;;341    				app_LeftWheel(FRONT,4);
0000fe  2104              MOVS     r1,#4
000100  2001              MOVS     r0,#1
000102  f7fffffe          BL       app_LeftWheel
;;;342    				app_RightWheel(FRONT,7);
000106  2107              MOVS     r1,#7
000108  2001              MOVS     r0,#1
00010a  f7fffffe          BL       app_RightWheel
;;;343    				finshFlag = CALIBRATION_WAITING;
00010e  2401              MOVS     r4,#1
000110  e008              B        |L7.292|
                  |L7.274|
;;;344    			}
;;;345    			else{
;;;346    				app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000112  2001              MOVS     r0,#1
000114  6e71              LDR      r1,[r6,#0x64]  ; parameter
000116  f7fffffe          BL       app_LeftWheel
;;;347    				app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
00011a  2001              MOVS     r0,#1
00011c  6eb1              LDR      r1,[r6,#0x68]  ; parameter
00011e  f7fffffe          BL       app_RightWheel
;;;348    				finshFlag = CALIBRATION_FINISHED;
000122  2400              MOVS     r4,#0
                  |L7.292|
;;;349    			}
;;;350    	}
;;;351    	return finshFlag;
000124  4620              MOV      r0,r4
;;;352    }
000126  e8bd87f0          POP      {r4-r10,pc}
;;;353    
                          ENDP

00012a  0000              DCW      0x0000
                  |L7.300|
                          DCD      0x3e99999a
                  |L7.304|
                          DCD      0xbe99999a
                  |L7.308|
                          DCD      parameter
                  |L7.312|
                          DCD      0x40000400
                  |L7.316|
                          DCD      SRF_04_Data4
                  |L7.320|
                          DCD      SRF_04_Data3
                  |L7.324|
                          DCD      SRF_04_Data6
                  |L7.328|
                          DCD      SRF_04_Data5
                  |L7.332|
                          DCD      SRF_04_Data2
                  |L7.336|
                          DCD      SRF_04_Data1

                          AREA ||i.app_findFire||, CODE, READONLY, ALIGN=2

                  app_findFire PROC
;;;272    }
;;;273    calibrationFinish_e app_findFire(void){
000000  b510              PUSH     {r4,lr}
;;;274    	float calibrationData;
;;;275    	calibrationFinish_e finshFlag;
;;;276    	finshFlag = CALIBRATION_NULL;
000002  2402              MOVS     r4,#2
;;;277    	calibrationData = adcTestData.adcData[L_ADC] - adcTestData.adcData[R_ADC];
000004  4815              LDR      r0,|L8.92|
000006  c803              LDM      r0,{r0,r1}
000008  f7fffffe          BL       __aeabi_fsub
;;;278    	if(calibrationData > 10){
00000c  4914              LDR      r1,|L8.96|
00000e  4288              CMP      r0,r1
000010  dd09              BLE      |L8.38|
;;;279    		app_LeftWheel(FRONT,12);
000012  210c              MOVS     r1,#0xc
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       app_LeftWheel
;;;280    		app_RightWheel(FRONT,5);
00001a  2105              MOVS     r1,#5
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       app_RightWheel
;;;281    		finshFlag = CALIBRATION_WAITING;
000022  2401              MOVS     r4,#1
000024  e018              B        |L8.88|
                  |L8.38|
;;;282    	}else if(calibrationData < -10){
000026  490f              LDR      r1,|L8.100|
000028  4288              CMP      r0,r1
00002a  d909              BLS      |L8.64|
;;;283    		app_LeftWheel(FRONT,5);
00002c  2105              MOVS     r1,#5
00002e  2001              MOVS     r0,#1
000030  f7fffffe          BL       app_LeftWheel
;;;284    		app_RightWheel(FRONT,12);
000034  210c              MOVS     r1,#0xc
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       app_RightWheel
;;;285    		finshFlag = CALIBRATION_WAITING;
00003c  2401              MOVS     r4,#1
00003e  e00b              B        |L8.88|
                  |L8.64|
;;;286    	}else if(calibrationData != 0){
000040  f0104fff          TST      r0,#0x7f800000
000044  d008              BEQ      |L8.88|
;;;287    		app_LeftWheel(FRONT,20);
000046  2114              MOVS     r1,#0x14
000048  2001              MOVS     r0,#1
00004a  f7fffffe          BL       app_LeftWheel
;;;288    		app_RightWheel(FRONT,20);
00004e  2114              MOVS     r1,#0x14
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       app_RightWheel
;;;289    		finshFlag = CALIBRATION_FINISHED;
000056  2400              MOVS     r4,#0
                  |L8.88|
;;;290    	}
;;;291    	return finshFlag;
000058  4620              MOV      r0,r4
;;;292    }
00005a  bd10              POP      {r4,pc}
;;;293    
                          ENDP

                  |L8.92|
                          DCD      adcTestData
                  |L8.96|
                          DCD      0x41200000
                  |L8.100|
                          DCD      0xc1200000

                          AREA ||i.app_frontTurn||, CODE, READONLY, ALIGN=2

                  app_frontTurn PROC
;;;355    
;;;356    void app_frontTurn(turnDirection_e direction,uint16_t angle){
000000  b538              PUSH     {r3-r5,lr}
000002  460a              MOV      r2,r1
;;;357    //	moveWays_e finishFlag;
;;;358    	switch(direction){
;;;359    		case LEFT :{
;;;360    			switch(angle){ 
;;;361    				case 90:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_LEFT__LEFT_RATE],
000004  4c29              LDR      r4,|L9.172|
000006  2801              CMP      r0,#1                 ;358
000008  d013              BEQ      |L9.50|
00000a  2802              CMP      r0,#2                 ;358
00000c  d110              BNE      |L9.48|
00000e  4620              MOV      r0,r4
;;;362    																				FOREWARD,parameter[NAME_TURN_LEFT__RIGHT_RATE],
;;;363    																				parameter[NAME_FRONT_TURN_LEFT_TIME_90]);break;}
;;;364    				case 180:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_LEFT__LEFT_RATE],
;;;365    																				FOREWARD,parameter[NAME_TURN_LEFT__RIGHT_RATE],
;;;366    																				parameter[NAME_FRONT_TURN_LEFT_TIME_180]);break;}
;;;367    				case 135:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_LEFT__LEFT_RATE],
;;;368    																				FOREWARD,parameter[NAME_TURN_LEFT__RIGHT_RATE],
;;;369    																				parameter[NAME_FRONT_TURN_LEFT_TIME_135]);break;}
;;;370    				case 45:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_LEFT__LEFT_RATE],
;;;371    																				FOREWARD,parameter[NAME_TURN_LEFT__RIGHT_RATE],
;;;372    																				parameter[NAME_FRONT_TURN_LEFT_TIME_45]);break;}
;;;373    				}
;;;374    			break;
;;;375    			}		
;;;376    		case RIGHT :{
;;;377    			switch(angle){
000010  2a2d              CMP      r2,#0x2d
000012  e9d01313          LDRD     r1,r3,[r0,#0x4c]
000016  d041              BEQ      |L9.156|
000018  2a5a              CMP      r2,#0x5a
00001a  d031              BEQ      |L9.128|
00001c  2a87              CMP      r2,#0x87
00001e  d036              BEQ      |L9.142|
000020  2ab4              CMP      r2,#0xb4
000022  d105              BNE      |L9.48|
;;;378    				case 90:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_RIGHT__LEFT_RATE],
;;;379    																				FOREWARD,parameter[NAME_TURN_RIGHT__RIGHT_RATE],
;;;380    																				parameter[NAME_FRONT_TURN_RIGHT_TIME_90]);break;}
;;;381    				case 180:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_RIGHT__LEFT_RATE],
000024  69e0              LDR      r0,[r4,#0x1c]  ; parameter
000026  2201              MOVS     r2,#1
000028  9000              STR      r0,[sp,#0]
00002a  4610              MOV      r0,r2
00002c  f7fffffe          BL       app_turnAngleDirection
                  |L9.48|
;;;382    																				FOREWARD,parameter[NAME_TURN_RIGHT__RIGHT_RATE],
;;;383    																				parameter[NAME_FRONT_TURN_RIGHT_TIME_180]);break;}
;;;384    				case 135:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_RIGHT__LEFT_RATE],
;;;385    																				FOREWARD,parameter[NAME_TURN_RIGHT__RIGHT_RATE],
;;;386    																				parameter[NAME_FRONT_TURN_RIGHT_TIME_135]);break;}
;;;387    				case 45:{app_turnAngleDirection(FOREWARD,parameter[NAME_TURN_RIGHT__LEFT_RATE],
;;;388    																				FOREWARD,parameter[NAME_TURN_RIGHT__RIGHT_RATE],
;;;389    																				parameter[NAME_FRONT_TURN_RIGHT_TIME_45]);break;}
;;;390    				}
;;;391    				break;
;;;392    			}
;;;393    	}
;;;394    }
000030  bd38              POP      {r3-r5,pc}
                  |L9.50|
000032  481e              LDR      r0,|L9.172|
000034  2a2d              CMP      r2,#0x2d              ;360
000036  e9d01311          LDRD     r1,r3,[r0,#0x44]      ;360
00003a  d01a              BEQ      |L9.114|
00003c  2a5a              CMP      r2,#0x5a              ;360
00003e  d00a              BEQ      |L9.86|
000040  2a87              CMP      r2,#0x87              ;360
000042  d00f              BEQ      |L9.100|
000044  2ab4              CMP      r2,#0xb4              ;360
000046  d1f3              BNE      |L9.48|
000048  68a0              LDR      r0,[r4,#8]            ;364  ; parameter
00004a  2201              MOVS     r2,#1                 ;364
00004c  9000              STR      r0,[sp,#0]            ;364
00004e  4610              MOV      r0,r2                 ;364
000050  f7fffffe          BL       app_turnAngleDirection
000054  bd38              POP      {r3-r5,pc}
                  |L9.86|
000056  6860              LDR      r0,[r4,#4]            ;361  ; parameter
000058  2201              MOVS     r2,#1                 ;361
00005a  9000              STR      r0,[sp,#0]            ;361
00005c  4610              MOV      r0,r2                 ;361
00005e  f7fffffe          BL       app_turnAngleDirection
000062  bd38              POP      {r3-r5,pc}
                  |L9.100|
000064  68e0              LDR      r0,[r4,#0xc]          ;367  ; parameter
000066  2201              MOVS     r2,#1                 ;367
000068  9000              STR      r0,[sp,#0]            ;367
00006a  4610              MOV      r0,r2                 ;367
00006c  f7fffffe          BL       app_turnAngleDirection
000070  bd38              POP      {r3-r5,pc}
                  |L9.114|
000072  6920              LDR      r0,[r4,#0x10]         ;370  ; parameter
000074  2201              MOVS     r2,#1                 ;370
000076  9000              STR      r0,[sp,#0]            ;370
000078  4610              MOV      r0,r2                 ;370
00007a  f7fffffe          BL       app_turnAngleDirection
00007e  bd38              POP      {r3-r5,pc}
                  |L9.128|
000080  69a0              LDR      r0,[r4,#0x18]         ;378  ; parameter
000082  2201              MOVS     r2,#1                 ;378
000084  9000              STR      r0,[sp,#0]            ;378
000086  4610              MOV      r0,r2                 ;378
000088  f7fffffe          BL       app_turnAngleDirection
00008c  bd38              POP      {r3-r5,pc}
                  |L9.142|
00008e  6a20              LDR      r0,[r4,#0x20]         ;384  ; parameter
000090  2201              MOVS     r2,#1                 ;384
000092  9000              STR      r0,[sp,#0]            ;384
000094  4610              MOV      r0,r2                 ;384
000096  f7fffffe          BL       app_turnAngleDirection
00009a  bd38              POP      {r3-r5,pc}
                  |L9.156|
00009c  6a60              LDR      r0,[r4,#0x24]         ;387  ; parameter
00009e  2201              MOVS     r2,#1                 ;387
0000a0  9000              STR      r0,[sp,#0]            ;387
0000a2  4610              MOV      r0,r2                 ;387
0000a4  f7fffffe          BL       app_turnAngleDirection
0000a8  bd38              POP      {r3-r5,pc}
;;;395    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L9.172|
                          DCD      parameter

                          AREA ||i.app_goBack||, CODE, READONLY, ALIGN=2

                  app_goBack PROC
;;;172    
;;;173    void app_goBack(uint16_t goTime,turnDirection_e direction){
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;174    	switch(direction){
;;;175    		case NO_TURN:{
;;;176    			app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000004  4c23              LDR      r4,|L10.148|
000006  460a              MOV      r2,r1                 ;174
000008  2a01              CMP      r2,#1                 ;174
00000a  6e61              LDR      r1,[r4,#0x64]         ;174
00000c  d017              BEQ      |L10.62|
00000e  2a02              CMP      r2,#2                 ;174
000010  d02a              BEQ      |L10.104|
000012  2a03              CMP      r2,#3                 ;174
000014  d13d              BNE      |L10.146|
000016  2002              MOVS     r0,#2
000018  f7fffffe          BL       app_LeftWheel
;;;177    			app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
00001c  2002              MOVS     r0,#2
00001e  6ea1              LDR      r1,[r4,#0x68]  ; parameter
000020  f7fffffe          BL       app_RightWheel
;;;178    			vTaskDelay(goTime);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       vTaskDelay
;;;179    			app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
00002a  2002              MOVS     r0,#2
00002c  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
00002e  f7fffffe          BL       app_LeftWheel
;;;180    			app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
000032  6f21              LDR      r1,[r4,#0x70]  ; parameter
000034  e8bd4070          POP      {r4-r6,lr}
000038  2002              MOVS     r0,#2
00003a  f7ffbffe          B.W      app_RightWheel
                  |L10.62|
;;;181    			break;
;;;182    		}
;;;183    		case LEFT:{
;;;184    			app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE] - WHELL_RATE_ADD);
00003e  390a              SUBS     r1,r1,#0xa
000040  2002              MOVS     r0,#2
000042  f7fffffe          BL       app_LeftWheel
;;;185    			app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
000046  2002              MOVS     r0,#2
000048  6ea1              LDR      r1,[r4,#0x68]  ; parameter
00004a  f7fffffe          BL       app_RightWheel
;;;186    			vTaskDelay(goTime);
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       vTaskDelay
;;;187    			app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
000054  2002              MOVS     r0,#2
000056  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
000058  f7fffffe          BL       app_LeftWheel
;;;188    			app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
00005c  6f21              LDR      r1,[r4,#0x70]  ; parameter
00005e  e8bd4070          POP      {r4-r6,lr}
000062  2002              MOVS     r0,#2
000064  f7ffbffe          B.W      app_RightWheel
                  |L10.104|
;;;189    			break;
;;;190    		}
;;;191    		case RIGHT:{
;;;192    			app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000068  2002              MOVS     r0,#2
00006a  f7fffffe          BL       app_LeftWheel
;;;193    			app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE] - WHELL_RATE_ADD);
00006e  6ea1              LDR      r1,[r4,#0x68]  ; parameter
000070  2002              MOVS     r0,#2
000072  390a              SUBS     r1,r1,#0xa
000074  f7fffffe          BL       app_RightWheel
;;;194    			vTaskDelay(goTime);
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       vTaskDelay
;;;195    			app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
00007e  2002              MOVS     r0,#2
000080  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
000082  f7fffffe          BL       app_LeftWheel
;;;196    			app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
000086  6f21              LDR      r1,[r4,#0x70]  ; parameter
000088  e8bd4070          POP      {r4-r6,lr}
00008c  2002              MOVS     r0,#2
00008e  f7ffbffe          B.W      app_RightWheel
                  |L10.146|
;;;197    			break;
;;;198    		
;;;199    		}
;;;200    	}
;;;201    }
000092  bd70              POP      {r4-r6,pc}
;;;202    
                          ENDP

                  |L10.148|
                          DCD      parameter

                          AREA ||i.app_goOtherAction||, CODE, READONLY, ALIGN=2

                  app_goOtherAction PROC
;;;67     
;;;68     void app_goOtherAction(uint16_t goTime,turnDirection_e direction,handDirection_e hand){
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460b              MOV      r3,r1
;;;69     	switch(hand){
;;;70     		case FRONT:{
;;;71     			switch(direction){
;;;72     				case NO_TURN:{
;;;73     					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000006  4c49              LDR      r4,|L11.300|
000008  2a01              CMP      r2,#1                 ;69
;;;74     					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;75     					vTaskDelay(goTime);
;;;76     					app_LeftWheel(FRONT,parameter[NAME_SET_ZERO__LEFT_RATE]);
;;;77     					app_RightWheel(FRONT,parameter[NAME_SET_ZERO__RIGHT_RATE]);
;;;78     					break;
;;;79     				}
;;;80     				case LEFT:{
;;;81     					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE] - WHELL_RATE_ADD);
00000a  6e61              LDR      r1,[r4,#0x64]
00000c  f1a1050a          SUB      r5,r1,#0xa
000010  d01b              BEQ      |L11.74|
000012  2a02              CMP      r2,#2                 ;69
000014  d17e              BNE      |L11.276|
;;;82     					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;83     					vTaskDelay(goTime);
;;;84     					app_LeftWheel(FRONT,parameter[NAME_SET_ZERO__LEFT_RATE]);
;;;85     					app_RightWheel(FRONT,parameter[NAME_SET_ZERO__RIGHT_RATE]);
;;;86     					break;
;;;87     				}
;;;88     				case RIGHT:{
;;;89     					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
;;;90     					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE] - WHELL_RATE_ADD);
;;;91     					vTaskDelay(goTime);
;;;92     					app_LeftWheel(FRONT,parameter[NAME_SET_ZERO__LEFT_RATE]);
;;;93     					app_RightWheel(FRONT,parameter[NAME_SET_ZERO__RIGHT_RATE]);
;;;94     					break;
;;;95     				
;;;96     				}
;;;97     			}
;;;98     			break;
;;;99     		}
;;;100    		case BEHIND:{
;;;101    			switch(direction){
000016  2b01              CMP      r3,#1
000018  d05b              BEQ      |L11.210|
00001a  2b02              CMP      r3,#2
00001c  d06e              BEQ      |L11.252|
00001e  2b03              CMP      r3,#3
000020  d178              BNE      |L11.276|
;;;102    				case NO_TURN:{
;;;103    					app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       app_LeftWheel
;;;104    					app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
000028  2002              MOVS     r0,#2
00002a  6ea1              LDR      r1,[r4,#0x68]  ; parameter
00002c  f7fffffe          BL       app_RightWheel
;;;105    					vTaskDelay(goTime);
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       vTaskDelay
;;;106    					app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
000036  2002              MOVS     r0,#2
000038  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
00003a  f7fffffe          BL       app_LeftWheel
;;;107    					app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
00003e  6f21              LDR      r1,[r4,#0x70]  ; parameter
000040  e8bd4070          POP      {r4-r6,lr}
000044  2002              MOVS     r0,#2
000046  f7ffbffe          B.W      app_RightWheel
                  |L11.74|
00004a  2b01              CMP      r3,#1                 ;71
00004c  d017              BEQ      |L11.126|
00004e  2b02              CMP      r3,#2                 ;71
000050  d02a              BEQ      |L11.168|
000052  2b03              CMP      r3,#3                 ;71
000054  d169              BNE      |L11.298|
000056  2001              MOVS     r0,#1                 ;73
000058  f7fffffe          BL       app_LeftWheel
00005c  2001              MOVS     r0,#1                 ;74
00005e  6ea1              LDR      r1,[r4,#0x68]         ;74  ; parameter
000060  f7fffffe          BL       app_RightWheel
000064  4630              MOV      r0,r6                 ;75
000066  f7fffffe          BL       vTaskDelay
00006a  2001              MOVS     r0,#1                 ;76
00006c  6ee1              LDR      r1,[r4,#0x6c]         ;76  ; parameter
00006e  f7fffffe          BL       app_LeftWheel
000072  6f21              LDR      r1,[r4,#0x70]         ;77  ; parameter
000074  e8bd4070          POP      {r4-r6,lr}            ;77
000078  2001              MOVS     r0,#1                 ;77
00007a  f7ffbffe          B.W      app_RightWheel
                  |L11.126|
00007e  4629              MOV      r1,r5                 ;81
000080  2001              MOVS     r0,#1                 ;81
000082  f7fffffe          BL       app_LeftWheel
000086  2001              MOVS     r0,#1                 ;82
000088  6ea1              LDR      r1,[r4,#0x68]         ;82  ; parameter
00008a  f7fffffe          BL       app_RightWheel
00008e  4630              MOV      r0,r6                 ;83
000090  f7fffffe          BL       vTaskDelay
000094  2001              MOVS     r0,#1                 ;84
000096  6ee1              LDR      r1,[r4,#0x6c]         ;84  ; parameter
000098  f7fffffe          BL       app_LeftWheel
00009c  6f21              LDR      r1,[r4,#0x70]         ;85  ; parameter
00009e  e8bd4070          POP      {r4-r6,lr}            ;85
0000a2  2001              MOVS     r0,#1                 ;85
0000a4  f7ffbffe          B.W      app_RightWheel
                  |L11.168|
0000a8  2001              MOVS     r0,#1                 ;89
0000aa  f7fffffe          BL       app_LeftWheel
0000ae  6ea1              LDR      r1,[r4,#0x68]         ;90  ; parameter
0000b0  2001              MOVS     r0,#1                 ;90
0000b2  390a              SUBS     r1,r1,#0xa            ;90
0000b4  f7fffffe          BL       app_RightWheel
0000b8  4630              MOV      r0,r6                 ;91
0000ba  f7fffffe          BL       vTaskDelay
0000be  2001              MOVS     r0,#1                 ;92
0000c0  6ee1              LDR      r1,[r4,#0x6c]         ;92  ; parameter
0000c2  f7fffffe          BL       app_LeftWheel
0000c6  6f21              LDR      r1,[r4,#0x70]         ;93  ; parameter
0000c8  e8bd4070          POP      {r4-r6,lr}            ;93
0000cc  2001              MOVS     r0,#1                 ;93
0000ce  f7ffbffe          B.W      app_RightWheel
                  |L11.210|
;;;108    					break;
;;;109    				}
;;;110    				case LEFT:{
;;;111    					app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE] - WHELL_RATE_ADD);
0000d2  4629              MOV      r1,r5
0000d4  2002              MOVS     r0,#2
0000d6  f7fffffe          BL       app_LeftWheel
;;;112    					app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
0000da  2002              MOVS     r0,#2
0000dc  6ea1              LDR      r1,[r4,#0x68]  ; parameter
0000de  f7fffffe          BL       app_RightWheel
;;;113    					vTaskDelay(goTime);
0000e2  4630              MOV      r0,r6
0000e4  f7fffffe          BL       vTaskDelay
;;;114    					app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
0000e8  2002              MOVS     r0,#2
0000ea  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
0000ec  f7fffffe          BL       app_LeftWheel
;;;115    					app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
0000f0  6f21              LDR      r1,[r4,#0x70]  ; parameter
0000f2  e8bd4070          POP      {r4-r6,lr}
0000f6  2002              MOVS     r0,#2
0000f8  f7ffbffe          B.W      app_RightWheel
                  |L11.252|
;;;116    					break;
;;;117    				}
;;;118    				case RIGHT:{
;;;119    					app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
0000fc  2002              MOVS     r0,#2
0000fe  f7fffffe          BL       app_LeftWheel
;;;120    					app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE] - WHELL_RATE_ADD);
000102  6ea1              LDR      r1,[r4,#0x68]  ; parameter
000104  2002              MOVS     r0,#2
000106  390a              SUBS     r1,r1,#0xa
000108  f7fffffe          BL       app_RightWheel
;;;121    					vTaskDelay(goTime);
00010c  4630              MOV      r0,r6
00010e  f7fffffe          BL       vTaskDelay
;;;122    					app_LeftWheel(BEHIND,parameter[NAME_SET_ZERO__LEFT_RATE]);
000112  e000              B        |L11.278|
                  |L11.276|
000114  e009              B        |L11.298|
                  |L11.278|
000116  2002              MOVS     r0,#2
000118  6ee1              LDR      r1,[r4,#0x6c]  ; parameter
00011a  f7fffffe          BL       app_LeftWheel
;;;123    					app_RightWheel(BEHIND,parameter[NAME_SET_ZERO__RIGHT_RATE]);
00011e  6f21              LDR      r1,[r4,#0x70]  ; parameter
000120  e8bd4070          POP      {r4-r6,lr}
000124  2002              MOVS     r0,#2
000126  f7ffbffe          B.W      app_RightWheel
                  |L11.298|
;;;124    					break;
;;;125    				}
;;;126    			}
;;;127    			break;	
;;;128    		}
;;;129    	}
;;;130    }
00012a  bd70              POP      {r4-r6,pc}
;;;131    
                          ENDP

                  |L11.300|
                          DCD      parameter

                          AREA ||i.app_goStraight||, CODE, READONLY, ALIGN=2

                  app_goStraight PROC
;;;165    
;;;166    void app_goStraight(void){
000000  b510              PUSH     {r4,lr}
;;;167    	if(outfireRobotState.lastMoveWays != GO_STRAIGHT){
000002  4808              LDR      r0,|L12.36|
000004  7880              LDRB     r0,[r0,#2]  ; outfireRobotState
000006  2815              CMP      r0,#0x15
000008  d00a              BEQ      |L12.32|
;;;168    		app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
00000a  4c07              LDR      r4,|L12.40|
00000c  2001              MOVS     r0,#1
00000e  6e61              LDR      r1,[r4,#0x64]  ; parameter
000010  f7fffffe          BL       app_LeftWheel
;;;169    		app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
000014  6ea1              LDR      r1,[r4,#0x68]  ; parameter
000016  e8bd4010          POP      {r4,lr}
00001a  2001              MOVS     r0,#1
00001c  f7ffbffe          B.W      app_RightWheel
                  |L12.32|
;;;170    	}
;;;171    }
000020  bd10              POP      {r4,pc}
;;;172    
                          ENDP

000022  0000              DCW      0x0000
                  |L12.36|
                          DCD      outfireRobotState
                  |L12.40|
                          DCD      parameter

                          AREA ||i.app_reverseTurn||, CODE, READONLY, ALIGN=2

                  app_reverseTurn PROC
;;;416    
;;;417    void app_reverseTurn(turnDirection_e direction,uint16_t angle){
000000  b5f8              PUSH     {r3-r7,lr}
000002  460a              MOV      r2,r1
;;;418    
;;;419    	switch(direction){
;;;420    		case LEFT :{
;;;421    			switch(angle){
;;;422    				case 45:{app_turnAngleDirection(REVERSE,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE],
000004  4b26              LDR      r3,|L13.160|
000006  2801              CMP      r0,#1                 ;419
000008  f103032c          ADD      r3,r3,#0x2c           ;419
00000c  cbf0              LDM      r3!,{r4-r7}           ;419
00000e  d012              BEQ      |L13.54|
000010  2802              CMP      r0,#2                 ;419
000012  d10f              BNE      |L13.52|
000014  4822              LDR      r0,|L13.160|
;;;423    																				FOREWARD,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE],
;;;424    																				parameter[NAME_REVERSE_TURN_TIME_45]);break;}
;;;425    				case 90:{app_turnAngleDirection(REVERSE,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE],
;;;426    																				FOREWARD,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE],
;;;427    																				parameter[NAME_REVERSE_TURN_TIME_90]);break;}
;;;428    				case 135:{app_turnAngleDirection(REVERSE,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE],
;;;429    																				FOREWARD,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE],
;;;430    																				parameter[NAME_REVERSE_TURN_TIME_135]);break;}
;;;431    				case 180:{app_turnAngleDirection(REVERSE,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE],
;;;432    																				FOREWARD,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE],
;;;433    																				parameter[NAME_REVERSE_TURN_TIME_180]);break;}
;;;434    				}
;;;435    			break;
;;;436    			}
;;;437    		case RIGHT :{
;;;438    			switch(angle){
000016  2a2d              CMP      r2,#0x2d
000018  e9d03117          LDRD     r3,r1,[r0,#0x5c]
00001c  d02e              BEQ      |L13.124|
00001e  2a5a              CMP      r2,#0x5a
000020  d032              BEQ      |L13.136|
000022  2a87              CMP      r2,#0x87
000024  d036              BEQ      |L13.148|
000026  2ab4              CMP      r2,#0xb4
000028  d104              BNE      |L13.52|
;;;439    				case 45:{app_turnAngleDirection(FOREWARD,parameter[NAME_REVERSE_RIGHT_TURN__LEFT_RATE],
;;;440    																				REVERSE,parameter[NAME_REVERSE_RIGHT_TURN__RIGHT_RATE],
;;;441    																				parameter[NAME_REVERSE_TURN_TIME_45]);break;}
;;;442    				case 90:{app_turnAngleDirection(FOREWARD,parameter[NAME_REVERSE_RIGHT_TURN__LEFT_RATE],
;;;443    																				REVERSE,parameter[NAME_REVERSE_RIGHT_TURN__RIGHT_RATE],
;;;444    																				parameter[NAME_REVERSE_TURN_TIME_90]);break;}
;;;445    				case 135:{app_turnAngleDirection(FOREWARD,parameter[NAME_REVERSE_RIGHT_TURN__LEFT_RATE],
;;;446    																				REVERSE,parameter[NAME_REVERSE_RIGHT_TURN__RIGHT_RATE],
;;;447    																				parameter[NAME_REVERSE_TURN_TIME_135]);break;}
;;;448    				case 180:{app_turnAngleDirection(FOREWARD,parameter[NAME_REVERSE_RIGHT_TURN__LEFT_RATE],
00002a  2202              MOVS     r2,#2
00002c  2001              MOVS     r0,#1
00002e  9700              STR      r7,[sp,#0]
000030  f7fffffe          BL       app_turnAngleDirection
                  |L13.52|
;;;449    																				REVERSE,parameter[NAME_REVERSE_RIGHT_TURN__RIGHT_RATE],
;;;450    																				parameter[NAME_REVERSE_TURN_TIME_180]);break;}
;;;451    				}
;;;452    			break;
;;;453    			}
;;;454    		}
;;;455    }
000034  bdf8              POP      {r3-r7,pc}
                  |L13.54|
000036  481a              LDR      r0,|L13.160|
000038  2a2d              CMP      r2,#0x2d              ;421
00003a  e9d01315          LDRD     r1,r3,[r0,#0x54]      ;421
00003e  d00b              BEQ      |L13.88|
000040  2a5a              CMP      r2,#0x5a              ;421
000042  d00f              BEQ      |L13.100|
000044  2a87              CMP      r2,#0x87              ;421
000046  d013              BEQ      |L13.112|
000048  2ab4              CMP      r2,#0xb4              ;421
00004a  d1f3              BNE      |L13.52|
00004c  2201              MOVS     r2,#1                 ;431
00004e  2002              MOVS     r0,#2                 ;431
000050  9700              STR      r7,[sp,#0]            ;431
000052  f7fffffe          BL       app_turnAngleDirection
000056  bdf8              POP      {r3-r7,pc}
                  |L13.88|
000058  2201              MOVS     r2,#1                 ;422
00005a  2002              MOVS     r0,#2                 ;422
00005c  9400              STR      r4,[sp,#0]            ;422
00005e  f7fffffe          BL       app_turnAngleDirection
000062  bdf8              POP      {r3-r7,pc}
                  |L13.100|
000064  2201              MOVS     r2,#1                 ;425
000066  2002              MOVS     r0,#2                 ;425
000068  9500              STR      r5,[sp,#0]            ;425
00006a  f7fffffe          BL       app_turnAngleDirection
00006e  bdf8              POP      {r3-r7,pc}
                  |L13.112|
000070  2201              MOVS     r2,#1                 ;428
000072  2002              MOVS     r0,#2                 ;428
000074  9600              STR      r6,[sp,#0]            ;428
000076  f7fffffe          BL       app_turnAngleDirection
00007a  bdf8              POP      {r3-r7,pc}
                  |L13.124|
00007c  2202              MOVS     r2,#2                 ;439
00007e  2001              MOVS     r0,#1                 ;439
000080  9400              STR      r4,[sp,#0]            ;439
000082  f7fffffe          BL       app_turnAngleDirection
000086  bdf8              POP      {r3-r7,pc}
                  |L13.136|
000088  2202              MOVS     r2,#2                 ;442
00008a  2001              MOVS     r0,#1                 ;442
00008c  9500              STR      r5,[sp,#0]            ;442
00008e  f7fffffe          BL       app_turnAngleDirection
000092  bdf8              POP      {r3-r7,pc}
                  |L13.148|
000094  2202              MOVS     r2,#2                 ;445
000096  2001              MOVS     r0,#1                 ;445
000098  9600              STR      r6,[sp,#0]            ;445
00009a  f7fffffe          BL       app_turnAngleDirection
00009e  bdf8              POP      {r3-r7,pc}
;;;456    
                          ENDP

                  |L13.160|
                          DCD      parameter

                          AREA ||i.app_setZero||, CODE, READONLY, ALIGN=2

                  app_setZero PROC
;;;156    }
;;;157    void app_setZero(void){
000000  b570              PUSH     {r4-r6,lr}
;;;158    	if(outfireRobotState.lastMoveWays != SET_ZERO){
000002  4809              LDR      r0,|L14.40|
000004  7880              LDRB     r0,[r0,#2]  ; outfireRobotState
000006  2816              CMP      r0,#0x16
000008  d00d              BEQ      |L14.38|
;;;159    		TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]);
00000a  4c08              LDR      r4,|L14.44|
00000c  4d08              LDR      r5,|L14.48|
00000e  8820              LDRH     r0,[r4,#0]  ; parameter
000010  b281              UXTH     r1,r0
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       TIM_SetCompare1
;;;160    		TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]);
000018  88a1              LDRH     r1,[r4,#4]  ; parameter
00001a  4628              MOV      r0,r5
00001c  e8bd4070          POP      {r4-r6,lr}
000020  b289              UXTH     r1,r1
000022  f7ffbffe          B.W      TIM_SetCompare2
                  |L14.38|
;;;161    	}
;;;162    }
000026  bd70              POP      {r4-r6,pc}
;;;163    
                          ENDP

                  |L14.40|
                          DCD      outfireRobotState
                  |L14.44|
                          DCD      parameter+0x6c
                  |L14.48|
                          DCD      0x40000400

                          AREA ||i.app_turnAngleDirection||, CODE, READONLY, ALIGN=2

                  app_turnAngleDirection PROC
;;;131    
;;;132    void app_turnAngleDirection(uint8_t leftWheelDirection,uint32_t leftWheelRate,
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;133                                uint8_t rightWheelDirection,uint32_t rightWheelRate,
;;;134    														uint32_t WaitingTime){
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  9c0a              LDR      r4,[sp,#0x28]
;;;135    	TickType_t xLastWakeTime = xTaskGetTickCount();	
00000e  f7fffffe          BL       xTaskGetTickCount
000012  9000              STR      r0,[sp,#0]
;;;136    	const portTickType xFrequency = pdMS_TO_TICKS(WaitingTime); 
000014  f44f707a          MOV      r0,#0x3e8
000018  4344              MULS     r4,r0,r4
00001a  fbb4f4f0          UDIV     r4,r4,r0
;;;137    	if(outfireRobotState.beginFlag == FREE || rescueRobotState.beginFlag == FREE){
00001e  4d14              LDR      r5,|L15.112|
000020  4e14              LDR      r6,|L15.116|
000022  79a8              LDRB     r0,[r5,#6]  ; outfireRobotState
000024  2801              CMP      r0,#1
000026  d002              BEQ      |L15.46|
000028  7970              LDRB     r0,[r6,#5]  ; rescueRobotState
00002a  2801              CMP      r0,#1
00002c  d11d              BNE      |L15.106|
                  |L15.46|
;;;138    		outfireRobotState.beginFlag = BUSY;
00002e  2000              MOVS     r0,#0
000030  71a8              STRB     r0,[r5,#6]
;;;139    		rescueRobotState.beginFlag = BUSY;
000032  7170              STRB     r0,[r6,#5]
;;;140    		app_LeftWheel(leftWheelDirection,leftWheelRate);
000034  4651              MOV      r1,r10
000036  4648              MOV      r0,r9
000038  f7fffffe          BL       app_LeftWheel
;;;141    		app_RightWheel(rightWheelDirection,rightWheelRate);
00003c  4641              MOV      r1,r8
00003e  4638              MOV      r0,r7
000040  f7fffffe          BL       app_RightWheel
;;;142    		vTaskDelayUntil(&xLastWakeTime, xFrequency);
000044  4621              MOV      r1,r4
000046  4668              MOV      r0,sp
000048  f7fffffe          BL       vTaskDelayUntil
;;;143    		TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]);
00004c  4c0a              LDR      r4,|L15.120|
00004e  4f0b              LDR      r7,|L15.124|
000050  8820              LDRH     r0,[r4,#0]  ; parameter
000052  b281              UXTH     r1,r0
000054  4638              MOV      r0,r7
000056  f7fffffe          BL       TIM_SetCompare1
;;;144    		TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]);
00005a  88a1              LDRH     r1,[r4,#4]  ; parameter
00005c  4638              MOV      r0,r7
00005e  b289              UXTH     r1,r1
000060  f7fffffe          BL       TIM_SetCompare2
;;;145    		outfireRobotState.beginFlag = FREE;
000064  2001              MOVS     r0,#1
000066  71a8              STRB     r0,[r5,#6]
;;;146    		rescueRobotState.beginFlag = FREE;
000068  7170              STRB     r0,[r6,#5]
                  |L15.106|
;;;147    	}
;;;148    }
00006a  e8bd8ff8          POP      {r3-r11,pc}
;;;149    														
                          ENDP

00006e  0000              DCW      0x0000
                  |L15.112|
                          DCD      outfireRobotState
                  |L15.116|
                          DCD      rescueRobotState
                  |L15.120|
                          DCD      parameter+0x6c
                  |L15.124|
                          DCD      0x40000400

                          AREA ||i.app_walkStop||, CODE, READONLY, ALIGN=2

                  app_walkStop PROC
;;;150    
;;;151    void app_walkStop(void){
000000  b570              PUSH     {r4-r6,lr}
;;;152    	if(outfireRobotState.lastMoveWays != STOP){
000002  4809              LDR      r0,|L16.40|
000004  7880              LDRB     r0,[r0,#2]  ; outfireRobotState
000006  2801              CMP      r0,#1
000008  d00d              BEQ      |L16.38|
;;;153    		TIM_SetCompare1(TIM3,parameter[NAME_SET_ZERO__LEFT_RATE]);
00000a  4c08              LDR      r4,|L16.44|
00000c  4d08              LDR      r5,|L16.48|
00000e  8820              LDRH     r0,[r4,#0]  ; parameter
000010  b281              UXTH     r1,r0
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       TIM_SetCompare1
;;;154    		TIM_SetCompare2(TIM3,parameter[NAME_SET_ZERO__RIGHT_RATE]);
000018  88a1              LDRH     r1,[r4,#4]  ; parameter
00001a  4628              MOV      r0,r5
00001c  e8bd4070          POP      {r4-r6,lr}
000020  b289              UXTH     r1,r1
000022  f7ffbffe          B.W      TIM_SetCompare2
                  |L16.38|
;;;155    	}
;;;156    }
000026  bd70              POP      {r4-r6,pc}
;;;157    void app_setZero(void){
                          ENDP

                  |L16.40|
                          DCD      outfireRobotState
                  |L16.44|
                          DCD      parameter+0x6c
                  |L16.48|
                          DCD      0x40000400

                          AREA ||i.app_walkTask||, CODE, READONLY, ALIGN=1

                  app_walkTask PROC
;;;515    }
;;;516    void app_walkTask(void *Parameters)
000000  b508              PUSH     {r3,lr}
;;;517    {
;;;518    	TickType_t xLastWakeTime = xTaskGetTickCount();
000002  f7fffffe          BL       xTaskGetTickCount
000006  9000              STR      r0,[sp,#0]
                  |L17.8|
;;;519    	while(1)
;;;520    	{
;;;521    		vTaskDelayUntil(&xLastWakeTime, WALK_TASK_PERIOD);
000008  2101              MOVS     r1,#1
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       vTaskDelayUntil
;;;522    		app_walkWaysChoose();
000010  f7fffffe          BL       app_walkWaysChoose
;;;523    		vTaskDelay(1);
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       vTaskDelay
00001a  e7f5              B        |L17.8|
;;;524    	}
;;;525    }
;;;526    
                          ENDP


                          AREA ||i.app_walkTaskInit||, CODE, READONLY, ALIGN=2

                  app_walkTaskInit PROC
;;;526    
;;;527    void app_walkTaskInit(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;528    {
;;;529     xTaskCreate(app_walkTask,"Walk",WALK_STACK_SIZE,NULL,WALK_PRIORITY,&appWalk.xHandleTask);
000002  2000              MOVS     r0,#0
000004  4906              LDR      r1,|L18.32|
000006  e9cd1001          STRD     r1,r0,[sp,#4]
00000a  2205              MOVS     r2,#5
00000c  4603              MOV      r3,r0
00000e  9200              STR      r2,[sp,#0]
000010  9003              STR      r0,[sp,#0xc]
000012  f44f7200          MOV      r2,#0x200
000016  a103              ADR      r1,|L18.36|
000018  4804              LDR      r0,|L18.44|
00001a  f7fffffe          BL       xTaskGenericCreate
;;;530    }
00001e  bd1f              POP      {r0-r4,pc}
;;;531    
                          ENDP

                  |L18.32|
                          DCD      ||.bss||
                  |L18.36|
000024  57616c6b          DCB      "Walk",0
000028  00      
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0
                  |L18.44|
                          DCD      app_walkTask

                          AREA ||i.app_walkWaysChoose||, CODE, READONLY, ALIGN=2

                  app_walkWaysChoose PROC
;;;456    
;;;457    void app_walkWaysChoose()
000000  b570              PUSH     {r4-r6,lr}
;;;458    {
;;;459    	if(robotSelect.robotSelect == OUT_FIRE1 || robotSelect.robotSelect == OUT_FIRE2){
000002  4882              LDR      r0,|L19.524|
;;;460    		switch(outfireRobotState.moveWays){
000004  4c82              LDR      r4,|L19.528|
;;;461    			case STOP:{app_walkStop();break;}
;;;462    			case FRONT_TURN_LEFT_90:{app_frontTurn(LEFT,90);break;}
;;;463    			case FRONT_TURN_LEFT_180:{app_frontTurn(LEFT,180);break;}
;;;464    			case FRONT_TURN_RIGHT_90:{app_frontTurn(RIGHT,90);break;}
;;;465    			case FRONT_TURN_RIGHT_180:{app_frontTurn(RIGHT,180);break;}
;;;466    			case FRONT_TURN_LEFT_135:{app_frontTurn(LEFT,135);break;}
;;;467    			case FRONT_TURN_LEFT_45:{app_frontTurn(LEFT,45);break;}
;;;468    			case FRONT_TURN_RIGHT_135:{app_frontTurn(RIGHT,135);break;}
;;;469    			case FRONT_TURN_RIGHT_45:{app_frontTurn(RIGHT,45);break;}
;;;470    			case BEHIND_TURN_LEFT_45:{app_behindTurn(LEFT,45);break;}
;;;471    			case BEHIND_TURN_RIGHT_45:{app_behindTurn(RIGHT,45);break;}
;;;472    			case REVERSE_LEFT_TURN_45:{app_reverseTurn(LEFT,45);break;}
;;;473    			case REVERSE_LEFT_TURN_90:{app_reverseTurn(LEFT,90);break;}
;;;474    			case REVERSE_LEFT_TURN_135:{app_reverseTurn(LEFT,135);break;}
;;;475    			case REVERSE_LEFT_TURN_180:{app_reverseTurn(LEFT,180);break;}
;;;476    			case REVERSE_RIGHT_TURN_45:{app_reverseTurn(RIGHT,45);break;}
;;;477    			case REVERSE_RIGHT_TURN_90:{app_reverseTurn(RIGHT,90);break;}
;;;478    			case REVERSE_RIGHT_TURN_135:{app_reverseTurn(RIGHT,135);break;}
;;;479    			case REVERSE_RIGHT_TURN_180:{app_reverseTurn(RIGHT,180);break;}
;;;480    			case GO_STRAIGHT:{app_goStraight();break;}
;;;481    			case SET_ZERO:{app_setZero();break;}
;;;482    			default:break;
;;;483    		}
;;;484    	}
;;;485    	else if(robotSelect.robotSelect == RESCUE){
;;;486    		switch(rescueRobotState.moveWays){
000006  4d83              LDR      r5,|L19.532|
000008  7800              LDRB     r0,[r0,#0]            ;459  ; robotSelect
00000a  2800              CMP      r0,#0                 ;459
00000c  d004              BEQ      |L19.24|
00000e  2801              CMP      r0,#1                 ;459
000010  d002              BEQ      |L19.24|
000012  2802              CMP      r0,#2                 ;485
000014  d075              BEQ      |L19.258|
                  |L19.22|
000016  e0e7              B        |L19.488|
                  |L19.24|
000018  7860              LDRB     r0,[r4,#1]            ;460  ; outfireRobotState
00001a  2817              CMP      r0,#0x17              ;460
00001c  d2fb              BCS      |L19.22|
00001e  e8dff000          TBB      [pc,r0]               ;460
000022  e30c              DCB      0xe3,0x0c
000024  0f14191e          DCB      0x0f,0x14,0x19,0x1e
000028  23282d32          DCB      0x23,0x28,0x2d,0x32
00002c  373c4155          DCB      0x37,0x3c,0x41,0x55
000030  465a4b5f          DCB      0x46,0x5a,0x4b,0x5f
000034  5064e369          DCB      0x50,0x64,0xe3,0x69
000038  6d00              DCB      0x6d,0x00
00003a  f7fffffe          BL       app_walkStop
00003e  e0d3              B        |L19.488|
000040  215a              MOVS     r1,#0x5a              ;462
000042  2001              MOVS     r0,#1                 ;462
000044  f7fffffe          BL       app_frontTurn
000048  e0ce              B        |L19.488|
00004a  21b4              MOVS     r1,#0xb4              ;463
00004c  2001              MOVS     r0,#1                 ;463
00004e  f7fffffe          BL       app_frontTurn
000052  e0c9              B        |L19.488|
000054  215a              MOVS     r1,#0x5a              ;464
000056  2002              MOVS     r0,#2                 ;464
000058  f7fffffe          BL       app_frontTurn
00005c  e0c4              B        |L19.488|
00005e  21b4              MOVS     r1,#0xb4              ;465
000060  2002              MOVS     r0,#2                 ;465
000062  f7fffffe          BL       app_frontTurn
000066  e0bf              B        |L19.488|
000068  2187              MOVS     r1,#0x87              ;466
00006a  2001              MOVS     r0,#1                 ;466
00006c  f7fffffe          BL       app_frontTurn
000070  e0ba              B        |L19.488|
000072  212d              MOVS     r1,#0x2d              ;467
000074  2001              MOVS     r0,#1                 ;467
000076  f7fffffe          BL       app_frontTurn
00007a  e0b5              B        |L19.488|
00007c  2187              MOVS     r1,#0x87              ;468
00007e  2002              MOVS     r0,#2                 ;468
000080  f7fffffe          BL       app_frontTurn
000084  e0b0              B        |L19.488|
000086  212d              MOVS     r1,#0x2d              ;469
000088  2002              MOVS     r0,#2                 ;469
00008a  f7fffffe          BL       app_frontTurn
00008e  e0ab              B        |L19.488|
000090  212d              MOVS     r1,#0x2d              ;470
000092  2001              MOVS     r0,#1                 ;470
000094  f7fffffe          BL       app_behindTurn
000098  e0a6              B        |L19.488|
00009a  212d              MOVS     r1,#0x2d              ;471
00009c  2002              MOVS     r0,#2                 ;471
00009e  f7fffffe          BL       app_behindTurn
0000a2  e0a1              B        |L19.488|
0000a4  212d              MOVS     r1,#0x2d              ;472
0000a6  2001              MOVS     r0,#1                 ;472
0000a8  f7fffffe          BL       app_reverseTurn
0000ac  e09c              B        |L19.488|
0000ae  215a              MOVS     r1,#0x5a              ;473
0000b0  2001              MOVS     r0,#1                 ;473
0000b2  f7fffffe          BL       app_reverseTurn
0000b6  e097              B        |L19.488|
0000b8  2187              MOVS     r1,#0x87              ;474
0000ba  2001              MOVS     r0,#1                 ;474
0000bc  f7fffffe          BL       app_reverseTurn
0000c0  e092              B        |L19.488|
0000c2  21b4              MOVS     r1,#0xb4              ;475
0000c4  2001              MOVS     r0,#1                 ;475
0000c6  f7fffffe          BL       app_reverseTurn
0000ca  e08d              B        |L19.488|
0000cc  212d              MOVS     r1,#0x2d              ;476
0000ce  2002              MOVS     r0,#2                 ;476
0000d0  f7fffffe          BL       app_reverseTurn
0000d4  e088              B        |L19.488|
0000d6  215a              MOVS     r1,#0x5a              ;477
0000d8  2002              MOVS     r0,#2                 ;477
0000da  f7fffffe          BL       app_reverseTurn
0000de  e083              B        |L19.488|
0000e0  2187              MOVS     r1,#0x87              ;478
0000e2  2002              MOVS     r0,#2                 ;478
0000e4  f7fffffe          BL       app_reverseTurn
0000e8  e07e              B        |L19.488|
0000ea  21b4              MOVS     r1,#0xb4              ;479
0000ec  2002              MOVS     r0,#2                 ;479
0000ee  f7fffffe          BL       app_reverseTurn
0000f2  e079              B        |L19.488|
0000f4  f7fffffe          BL       app_goStraight
0000f8  e076              B        |L19.488|
0000fa  e002              B        |L19.258|
0000fc  f7fffffe          BL       app_setZero
000100  e072              B        |L19.488|
                  |L19.258|
000102  7828              LDRB     r0,[r5,#0]  ; rescueRobotState
000104  2817              CMP      r0,#0x17
000106  d26f              BCS      |L19.488|
000108  e8dff000          TBB      [pc,r0]
00010c  6e0c0f14          DCB      0x6e,0x0c,0x0f,0x14
000110  191e2328          DCB      0x19,0x1e,0x23,0x28
000114  2d32373c          DCB      0x2d,0x32,0x37,0x3c
000118  4155465a          DCB      0x41,0x55,0x46,0x5a
00011c  4b5f5064          DCB      0x4b,0x5f,0x50,0x64
000120  6e696c00          DCB      0x6e,0x69,0x6c,0x00
;;;487    			case STOP:{app_walkStop();break;}
000124  f7fffffe          BL       app_walkStop
000128  e05e              B        |L19.488|
;;;488    			case FRONT_TURN_LEFT_90:{app_frontTurn(LEFT,90);break;}
00012a  215a              MOVS     r1,#0x5a
00012c  2001              MOVS     r0,#1
00012e  f7fffffe          BL       app_frontTurn
000132  e059              B        |L19.488|
;;;489    			case FRONT_TURN_LEFT_180:{app_frontTurn(LEFT,180);break;}
000134  21b4              MOVS     r1,#0xb4
000136  2001              MOVS     r0,#1
000138  f7fffffe          BL       app_frontTurn
00013c  e054              B        |L19.488|
;;;490    			case FRONT_TURN_RIGHT_90:{app_frontTurn(RIGHT,90);break;}
00013e  215a              MOVS     r1,#0x5a
000140  2002              MOVS     r0,#2
000142  f7fffffe          BL       app_frontTurn
000146  e04f              B        |L19.488|
;;;491    			case FRONT_TURN_RIGHT_180:{app_frontTurn(RIGHT,180);break;}
000148  21b4              MOVS     r1,#0xb4
00014a  2002              MOVS     r0,#2
00014c  f7fffffe          BL       app_frontTurn
000150  e04a              B        |L19.488|
;;;492    			case FRONT_TURN_LEFT_135:{app_frontTurn(LEFT,135);break;}
000152  2187              MOVS     r1,#0x87
000154  2001              MOVS     r0,#1
000156  f7fffffe          BL       app_frontTurn
00015a  e045              B        |L19.488|
;;;493    			case FRONT_TURN_LEFT_45:{app_frontTurn(LEFT,45);break;}
00015c  212d              MOVS     r1,#0x2d
00015e  2001              MOVS     r0,#1
000160  f7fffffe          BL       app_frontTurn
000164  e040              B        |L19.488|
;;;494    			case FRONT_TURN_RIGHT_135:{app_frontTurn(RIGHT,135);break;}
000166  2187              MOVS     r1,#0x87
000168  2002              MOVS     r0,#2
00016a  f7fffffe          BL       app_frontTurn
00016e  e03b              B        |L19.488|
;;;495    			case FRONT_TURN_RIGHT_45:{app_frontTurn(RIGHT,45);break;}
000170  212d              MOVS     r1,#0x2d
000172  2002              MOVS     r0,#2
000174  f7fffffe          BL       app_frontTurn
000178  e036              B        |L19.488|
;;;496    			case BEHIND_TURN_LEFT_45:{app_behindTurn(LEFT,45);break;}
00017a  212d              MOVS     r1,#0x2d
00017c  2001              MOVS     r0,#1
00017e  f7fffffe          BL       app_behindTurn
000182  e031              B        |L19.488|
;;;497    			case BEHIND_TURN_RIGHT_45:{app_behindTurn(RIGHT,45);break;}
000184  212d              MOVS     r1,#0x2d
000186  2002              MOVS     r0,#2
000188  f7fffffe          BL       app_behindTurn
00018c  e02c              B        |L19.488|
;;;498    			case REVERSE_LEFT_TURN_45:{app_reverseTurn(LEFT,45);break;}
00018e  212d              MOVS     r1,#0x2d
000190  2001              MOVS     r0,#1
000192  f7fffffe          BL       app_reverseTurn
000196  e027              B        |L19.488|
;;;499    			case REVERSE_LEFT_TURN_90:{app_reverseTurn(LEFT,90);break;}
000198  215a              MOVS     r1,#0x5a
00019a  2001              MOVS     r0,#1
00019c  f7fffffe          BL       app_reverseTurn
0001a0  e022              B        |L19.488|
;;;500    			case REVERSE_LEFT_TURN_135:{app_reverseTurn(LEFT,135);break;}
0001a2  2187              MOVS     r1,#0x87
0001a4  2001              MOVS     r0,#1
0001a6  f7fffffe          BL       app_reverseTurn
0001aa  e01d              B        |L19.488|
;;;501    			case REVERSE_LEFT_TURN_180:{app_reverseTurn(LEFT,180);break;}
0001ac  21b4              MOVS     r1,#0xb4
0001ae  2001              MOVS     r0,#1
0001b0  f7fffffe          BL       app_reverseTurn
0001b4  e018              B        |L19.488|
;;;502    			case REVERSE_RIGHT_TURN_45:{app_reverseTurn(RIGHT,45);break;}
0001b6  212d              MOVS     r1,#0x2d
0001b8  2002              MOVS     r0,#2
0001ba  f7fffffe          BL       app_reverseTurn
0001be  e013              B        |L19.488|
;;;503    			case REVERSE_RIGHT_TURN_90:{app_reverseTurn(RIGHT,90);break;}
0001c0  215a              MOVS     r1,#0x5a
0001c2  2002              MOVS     r0,#2
0001c4  f7fffffe          BL       app_reverseTurn
0001c8  e00e              B        |L19.488|
;;;504    			case REVERSE_RIGHT_TURN_135:{app_reverseTurn(RIGHT,135);break;}
0001ca  2187              MOVS     r1,#0x87
0001cc  2002              MOVS     r0,#2
0001ce  f7fffffe          BL       app_reverseTurn
0001d2  e009              B        |L19.488|
;;;505    			case REVERSE_RIGHT_TURN_180:{app_reverseTurn(RIGHT,180);break;}
0001d4  21b4              MOVS     r1,#0xb4
0001d6  2002              MOVS     r0,#2
0001d8  f7fffffe          BL       app_reverseTurn
0001dc  e004              B        |L19.488|
;;;506    			case GO_STRAIGHT:{app_goStraight();break;}
0001de  f7fffffe          BL       app_goStraight
0001e2  e001              B        |L19.488|
;;;507    			case SET_ZERO:{app_setZero();break;}
0001e4  f7fffffe          BL       app_setZero
                  |L19.488|
;;;508    			default:break;
;;;509    		}
;;;510    	}
;;;511    	rescueRobotState.lastMoveWays = rescueRobotState.moveWays;
0001e8  7828              LDRB     r0,[r5,#0]  ; rescueRobotState
0001ea  7068              STRB     r0,[r5,#1]
;;;512    	outfireRobotState.lastMoveWays = outfireRobotState.moveWays;
0001ec  7861              LDRB     r1,[r4,#1]  ; outfireRobotState
0001ee  70a1              STRB     r1,[r4,#2]
;;;513    	if(outfireRobotState.testTarget == TESTING && outfireRobotState.moveWays != GO_STRAIGHT) outfireRobotState.moveWays = STOP;
0001f0  7923              LDRB     r3,[r4,#4]  ; outfireRobotState
0001f2  2201              MOVS     r2,#1                 ;459
0001f4  b913              CBNZ     r3,|L19.508|
0001f6  2915              CMP      r1,#0x15
0001f8  d000              BEQ      |L19.508|
0001fa  7062              STRB     r2,[r4,#1]
                  |L19.508|
;;;514    	if(rescueRobotState.testTarget == TESTING && rescueRobotState.moveWays != GO_STRAIGHT) rescueRobotState.moveWays = STOP;
0001fc  78e9              LDRB     r1,[r5,#3]  ; rescueRobotState
0001fe  2900              CMP      r1,#0
000200  d102              BNE      |L19.520|
000202  2815              CMP      r0,#0x15
000204  d000              BEQ      |L19.520|
000206  702a              STRB     r2,[r5,#0]
                  |L19.520|
;;;515    }
000208  bd70              POP      {r4-r6,pc}
;;;516    void app_walkTask(void *Parameters)
                          ENDP

00020a  0000              DCW      0x0000
                  |L19.524|
                          DCD      robotSelect
                  |L19.528|
                          DCD      outfireRobotState
                  |L19.532|
                          DCD      rescueRobotState

                          AREA ||i.calibrationGostraight||, CODE, READONLY, ALIGN=2

                  calibrationGostraight PROC
;;;227    float differenceValue;
;;;228    void calibrationGostraight(turnDirection_e direction){
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;229    	float differenceSum;
;;;230    	switch(direction){
;;;231    		case LEFT:{
;;;232    			if(SRF_04_Data3.getDistance <= 20 && SRF_04_Data4.getDistance <= 20){
;;;233    				differenceValue = fabs(SRF_04_Data3.getDistance - SRF_04_Data4.getDistance);
;;;234    				differenceSum = GO_STRAIGHT_RATIO*differenceValue;
;;;235    				if(SRF_04_Data3.getDistance > SRF_04_Data4.getDistance){
;;;236    					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]-differenceSum);
000004  4c5a              LDR      r4,|L20.368|
000006  4e59              LDR      r6,|L20.364|
000008  4a5a              LDR      r2,|L20.372|
00000a  6e61              LDR      r1,[r4,#0x64]         ;230
00000c  2801              CMP      r0,#1                 ;230
00000e  d033              BEQ      |L20.120|
000010  2802              CMP      r0,#2                 ;230
000012  d17c              BNE      |L20.270|
;;;237    					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;238    				}
;;;239    				if(SRF_04_Data3.getDistance < SRF_04_Data4.getDistance){
;;;240    					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
;;;241    					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]-differenceSum);    //需要加补偿值
;;;242    				}
;;;243    			}else{
;;;244    				app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
;;;245    				app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;246    			}
;;;247    		break;
;;;248    		}
;;;249    		case RIGHT:{
;;;250    			if(SRF_04_Data5.getDistance <= 20 && SRF_04_Data6.getDistance <= 20){
000014  f8df9160          LDR      r9,|L20.376|
000018  f8d95008          LDR      r5,[r9,#8]  ; SRF_04_Data5
00001c  4295              CMP      r5,r2
00001e  dc77              BGT      |L20.272|
000020  f8df8158          LDR      r8,|L20.380|
000024  f8d87008          LDR      r7,[r8,#8]  ; SRF_04_Data6
000028  4297              CMP      r7,r2
00002a  dc71              BGT      |L20.272|
;;;251    				differenceValue = fabs(SRF_04_Data5.getDistance - SRF_04_Data6.getDistance);
00002c  4639              MOV      r1,r7
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       __aeabi_fsub
000034  f7fffffe          BL       __aeabi_f2d
000038  f0214100          BIC      r1,r1,#0x80000000
00003c  f7fffffe          BL       __aeabi_d2f
000040  6030              STR      r0,[r6,#0]  ; differenceValue
;;;252    				differenceSum = GO_STRAIGHT_RATIO*differenceValue;
000042  2102              MOVS     r1,#2
000044  f7fffffe          BL       __ARM_scalbnf
000048  4606              MOV      r6,r0
;;;253    				if(SRF_04_Data5.getDistance > SRF_04_Data6.getDistance){
00004a  4639              MOV      r1,r7
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       __aeabi_cfrcmple
000052  d266              BCS      |L20.290|
;;;254    					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000054  2001              MOVS     r0,#1
000056  6e61              LDR      r1,[r4,#0x64]  ; parameter
000058  f7fffffe          BL       app_LeftWheel
;;;255    					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]-differenceSum);
00005c  6ea0              LDR      r0,[r4,#0x68]  ; parameter
00005e  f7fffffe          BL       __aeabi_ui2f
000062  4631              MOV      r1,r6
000064  f7fffffe          BL       __aeabi_fsub
000068  f7fffffe          BL       __aeabi_f2uiz
00006c  e8bd47f0          POP      {r4-r10,lr}
000070  4601              MOV      r1,r0
000072  2001              MOVS     r0,#1
000074  f7ffbffe          B.W      app_RightWheel
                  |L20.120|
000078  f8df9104          LDR      r9,|L20.384|
00007c  f8d95008          LDR      r5,[r9,#8]            ;232  ; SRF_04_Data3
000080  4295              CMP      r5,r2                 ;232
000082  dc42              BGT      |L20.266|
000084  f8df80fc          LDR      r8,|L20.388|
000088  f8d87008          LDR      r7,[r8,#8]            ;232  ; SRF_04_Data4
00008c  4297              CMP      r7,r2                 ;232
00008e  dc3c              BGT      |L20.266|
000090  4639              MOV      r1,r7                 ;233
000092  4628              MOV      r0,r5                 ;233
000094  f7fffffe          BL       __aeabi_fsub
000098  f7fffffe          BL       __aeabi_f2d
00009c  f0214100          BIC      r1,r1,#0x80000000     ;233
0000a0  f7fffffe          BL       __aeabi_d2f
0000a4  6030              STR      r0,[r6,#0]            ;233  ; differenceValue
0000a6  2102              MOVS     r1,#2                 ;234
0000a8  f7fffffe          BL       __ARM_scalbnf
0000ac  4606              MOV      r6,r0                 ;234
0000ae  4639              MOV      r1,r7                 ;235
0000b0  4628              MOV      r0,r5                 ;235
0000b2  f7fffffe          BL       __aeabi_cfrcmple
0000b6  d20f              BCS      |L20.216|
0000b8  6e60              LDR      r0,[r4,#0x64]         ;236  ; parameter
0000ba  f7fffffe          BL       __aeabi_ui2f
0000be  4631              MOV      r1,r6                 ;236
0000c0  f7fffffe          BL       __aeabi_fsub
0000c4  f7fffffe          BL       __aeabi_f2uiz
0000c8  4601              MOV      r1,r0                 ;236
0000ca  2001              MOVS     r0,#1                 ;236
0000cc  f7fffffe          BL       app_LeftWheel
0000d0  2001              MOVS     r0,#1                 ;237
0000d2  6ea1              LDR      r1,[r4,#0x68]         ;237  ; parameter
0000d4  f7fffffe          BL       app_RightWheel
                  |L20.216|
0000d8  f8d81008          LDR      r1,[r8,#8]            ;239  ; SRF_04_Data4
0000dc  f8d90008          LDR      r0,[r9,#8]            ;239  ; SRF_04_Data3
0000e0  f7fffffe          BL       __aeabi_cfcmple
0000e4  d23f              BCS      |L20.358|
0000e6  2001              MOVS     r0,#1                 ;240
0000e8  6e61              LDR      r1,[r4,#0x64]         ;240  ; parameter
0000ea  f7fffffe          BL       app_LeftWheel
0000ee  6ea0              LDR      r0,[r4,#0x68]         ;241  ; parameter
0000f0  f7fffffe          BL       __aeabi_ui2f
0000f4  4631              MOV      r1,r6                 ;241
0000f6  f7fffffe          BL       __aeabi_fsub
0000fa  f7fffffe          BL       __aeabi_f2uiz
0000fe  e8bd47f0          POP      {r4-r10,lr}           ;241
000102  4601              MOV      r1,r0                 ;241
000104  2001              MOVS     r0,#1                 ;241
000106  f7ffbffe          B.W      app_RightWheel
                  |L20.266|
00010a  2001              MOVS     r0,#1                 ;244
00010c  e001              B        |L20.274|
                  |L20.270|
00010e  e02a              B        |L20.358|
                  |L20.272|
000110  e020              B        |L20.340|
                  |L20.274|
000112  f7fffffe          BL       app_LeftWheel
000116  6ea1              LDR      r1,[r4,#0x68]         ;245  ; parameter
000118  e8bd47f0          POP      {r4-r10,lr}           ;245
00011c  2001              MOVS     r0,#1                 ;245
00011e  f7ffbffe          B.W      app_RightWheel
                  |L20.290|
;;;256    				}
;;;257    				else if(SRF_04_Data5.getDistance < SRF_04_Data6.getDistance){
000122  f8d81008          LDR      r1,[r8,#8]  ; SRF_04_Data6
000126  f8d90008          LDR      r0,[r9,#8]  ; SRF_04_Data5
00012a  f7fffffe          BL       __aeabi_cfcmple
00012e  d21a              BCS      |L20.358|
;;;258    					app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]-differenceSum);
000130  6e60              LDR      r0,[r4,#0x64]  ; parameter
000132  f7fffffe          BL       __aeabi_ui2f
000136  4631              MOV      r1,r6
000138  f7fffffe          BL       __aeabi_fsub
00013c  f7fffffe          BL       __aeabi_f2uiz
000140  4601              MOV      r1,r0
000142  2001              MOVS     r0,#1
000144  f7fffffe          BL       app_LeftWheel
;;;259    					app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);	
000148  6ea1              LDR      r1,[r4,#0x68]  ; parameter
00014a  e8bd47f0          POP      {r4-r10,lr}
00014e  2001              MOVS     r0,#1
000150  f7ffbffe          B.W      app_RightWheel
                  |L20.340|
;;;260    				}
;;;261    			}
;;;262    			else{
;;;263    				app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
000154  2001              MOVS     r0,#1
000156  f7fffffe          BL       app_LeftWheel
;;;264    				app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
00015a  6ea1              LDR      r1,[r4,#0x68]  ; parameter
00015c  e8bd47f0          POP      {r4-r10,lr}
000160  2001              MOVS     r0,#1
000162  f7ffbffe          B.W      app_RightWheel
                  |L20.358|
;;;265    			}
;;;266    		break;
;;;267    		}
;;;268    		case NO_TURN:{
;;;269    		break;
;;;270    		} 
;;;271    	}
;;;272    }
000166  e8bd87f0          POP      {r4-r10,pc}
;;;273    calibrationFinish_e app_findFire(void){
                          ENDP

00016a  0000              DCW      0x0000
                  |L20.364|
                          DCD      ||area_number.27||
                  |L20.368|
                          DCD      parameter
                  |L20.372|
                          DCD      0x41a00000
                  |L20.376|
                          DCD      SRF_04_Data5
                  |L20.380|
                          DCD      SRF_04_Data6
                  |L20.384|
                          DCD      SRF_04_Data3
                  |L20.388|
                          DCD      SRF_04_Data4

                          AREA ||i.calibrationTostraight||, CODE, READONLY, ALIGN=2

                  calibrationTostraight PROC
;;;202    
;;;203    void calibrationTostraight(){
000000  b570              PUSH     {r4-r6,lr}
;;;204    	uint32_t timeSumLeft;
;;;205    	uint32_t timeSumRight;
;;;206    	float differenceValueLeft;
;;;207    	float differenceValueRight;
;;;208    	float differenceValueLeftCali;
;;;209    	float differenceValueRightCali;
;;;210    	
;;;211    	differenceValueLeft = fabs(SRF_04_Data3.getDistance + SRF_04_Data4.getDistance);
000002  4819              LDR      r0,|L21.104|
000004  6881              LDR      r1,[r0,#8]  ; SRF_04_Data4
000006  4819              LDR      r0,|L21.108|
000008  6880              LDR      r0,[r0,#8]  ; SRF_04_Data3
00000a  f7fffffe          BL       __aeabi_fadd
00000e  f7fffffe          BL       __aeabi_f2d
000012  f0214100          BIC      r1,r1,#0x80000000
000016  f7fffffe          BL       __aeabi_d2f
;;;212    	differenceValueRight = fabs(SRF_04_Data3.getDistance + SRF_04_Data4.getDistance);
00001a  4605              MOV      r5,r0
;;;213    	differenceValueLeftCali = (26 - differenceValueLeft);
00001c  4629              MOV      r1,r5
00001e  4814              LDR      r0,|L21.112|
000020  f7fffffe          BL       __aeabi_fsub
;;;214    	differenceValueRightCali = (26 - differenceValueRight);
;;;215    	timeSumLeft = CALIBRATION_TIME_RATIO*differenceValueLeftCali;
000024  4913              LDR      r1,|L21.116|
000026  f7fffffe          BL       __aeabi_fmul
00002a  f7fffffe          BL       __aeabi_f2uiz
;;;216    	timeSumRight = CALIBRATION_TIME_RATIO*differenceValueRightCali;
00002e  4604              MOV      r4,r0
;;;217    	if(differenceValueLeft < MIN_DISTANCE_VALUE){
000030  4e11              LDR      r6,|L21.120|
000032  42b5              CMP      r5,r6
000034  da09              BGE      |L21.74|
;;;218    		app_goOtherAction(timeSumLeft,RIGHT,FRONT);
000036  b2a0              UXTH     r0,r4
000038  2201              MOVS     r2,#1
00003a  2102              MOVS     r1,#2
00003c  f7fffffe          BL       app_goOtherAction
;;;219    		app_goOtherAction(timeSumLeft,LEFT,FRONT);
000040  2201              MOVS     r2,#1
000042  b2a0              UXTH     r0,r4
000044  4611              MOV      r1,r2
000046  f7fffffe          BL       app_goOtherAction
                  |L21.74|
;;;220    	}
;;;221    	if(differenceValueRight < MIN_DISTANCE_VALUE){
00004a  42b5              CMP      r5,r6
00004c  da0b              BGE      |L21.102|
;;;222    		app_goOtherAction(timeSumRight,LEFT,FRONT);
00004e  2201              MOVS     r2,#1
000050  b2a0              UXTH     r0,r4
000052  4611              MOV      r1,r2
000054  f7fffffe          BL       app_goOtherAction
;;;223    		app_goOtherAction(timeSumRight,RIGHT,FRONT);
000058  b2a0              UXTH     r0,r4
00005a  e8bd4070          POP      {r4-r6,lr}
00005e  2201              MOVS     r2,#1
000060  2102              MOVS     r1,#2
000062  f7ffbffe          B.W      app_goOtherAction
                  |L21.102|
;;;224    	}
;;;225    }
000066  bd70              POP      {r4-r6,pc}
;;;226    
                          ENDP

                  |L21.104|
                          DCD      SRF_04_Data4
                  |L21.108|
                          DCD      SRF_04_Data3
                  |L21.112|
                          DCD      0x41d00000
                  |L21.116|
                          DCD      0x41f00000
                  |L21.120|
                          DCD      0x40c00000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  appWalk
                          %        12

                          AREA ||.data||, DATA, ALIGN=0

                  finishFlag
000000  00                DCB      0x00

                          AREA ||area_number.26||, DATA, ALIGN=0

                          EXPORTAS ||area_number.26||, ||.data||
                  calibrationFinish
000000  00                DCB      0x00

                          AREA ||area_number.27||, DATA, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.data||
                  differenceValue
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\User_App\\app_walk.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_app_walk_c_f02d5432____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_app_walk_c_f02d5432____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_app_walk_c_f02d5432____REVSH|
#line 128
|__asm___10_app_walk_c_f02d5432____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
