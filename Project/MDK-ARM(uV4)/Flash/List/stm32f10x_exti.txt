; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_exti.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\User_App -I..\..\User\User_Driver -I..\..\User\Font_And_Bmp -I..\..\User\User_GUI -I..\..\User\Util -I.\RTE\_FreeRTOS_STM32F1 -I"D:\Keil MDK\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include" -I"D:\Keil MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\stm32f10x_exti.crf ..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;214      */
;;;215    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;216    {
;;;217      /* Check the parameters */
;;;218      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;219      
;;;220      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;221    }
000004  4770              BX       lr
;;;222    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;254      */
;;;255    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;256    {
;;;257      /* Check the parameters */
;;;258      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;259      
;;;260      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;261    }
000004  4770              BX       lr
;;;262    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;90       */
;;;91     void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;92     {
;;;93       EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;94       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;95       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;96       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;97       EXTI->PR = 0x000FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;98     }
00001a  4770              BX       lr
;;;99     
                          ENDP

                  |L3.28|
                          DCD      0x40010400
                  |L3.32|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;176      */
;;;177    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;178    {
;;;179      /* Check the parameters */
;;;180      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;181      
;;;182      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;183    }
000008  4770              BX       lr
;;;184    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;191      */
;;;192    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;193    {
;;;194      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;195      /* Check the parameters */
;;;196      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;197      
;;;198      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a02              LDR      r2,|L5.16|
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;199      {
;;;200        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;201      }
;;;202      else
;;;203      {
;;;204        bitstatus = RESET;
;;;205      }
;;;206      return bitstatus;
;;;207    }
00000e  4770              BX       lr
;;;208    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;229      */
;;;230    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;231    {
;;;232      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;233      uint32_t enablestatus = 0;
;;;234      /* Check the parameters */
;;;235      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;236      
;;;237      enablestatus =  EXTI->IMR & EXTI_Line;
000004  4a05              LDR      r2,|L6.28|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
;;;238      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
00000a  4b04              LDR      r3,|L6.28|
00000c  3314              ADDS     r3,r3,#0x14
00000e  681b              LDR      r3,[r3,#0]
000010  420b              TST      r3,r1
000012  d002              BEQ      |L6.26|
000014  2a00              CMP      r2,#0
000016  d000              BEQ      |L6.26|
;;;239      {
;;;240        bitstatus = SET;
000018  2001              MOVS     r0,#1
                  |L6.26|
;;;241      }
;;;242      else
;;;243      {
;;;244        bitstatus = RESET;
;;;245      }
;;;246      return bitstatus;
;;;247    }
00001a  4770              BX       lr
;;;248    
                          ENDP

                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;106      */
;;;107    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;108    {
;;;109      uint32_t tmp = 0;
;;;110    
;;;111      /* Check the parameters */
;;;112      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;113      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;114      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;115      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;116    
;;;117      tmp = (uint32_t)EXTI_BASE;
000002  4a1b              LDR      r2,|L7.112|
;;;118         
;;;119      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6801              LDR      r1,[r0,#0]
000008  2b00              CMP      r3,#0
00000a  d02a              BEQ      |L7.98|
;;;120      {
;;;121        /* Clear EXTI line configuration */
;;;122        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000c  6813              LDR      r3,[r2,#0]
00000e  438b              BICS     r3,r3,r1
000010  6013              STR      r3,[r2,#0]
;;;123        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000012  1d11              ADDS     r1,r2,#4
000014  680b              LDR      r3,[r1,#0]
000016  6804              LDR      r4,[r0,#0]
000018  43a3              BICS     r3,r3,r4
00001a  600b              STR      r3,[r1,#0]
;;;124        
;;;125        tmp += EXTI_InitStruct->EXTI_Mode;
00001c  7901              LDRB     r1,[r0,#4]
00001e  4411              ADD      r1,r1,r2
;;;126    
;;;127        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000020  680b              LDR      r3,[r1,#0]
000022  6804              LDR      r4,[r0,#0]
000024  4323              ORRS     r3,r3,r4
000026  600b              STR      r3,[r1,#0]
;;;128    
;;;129        /* Clear Rising Falling edge configuration */
;;;130        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000028  4c11              LDR      r4,|L7.112|
00002a  3408              ADDS     r4,r4,#8
00002c  6821              LDR      r1,[r4,#0]
00002e  6803              LDR      r3,[r0,#0]
000030  4399              BICS     r1,r1,r3
000032  6021              STR      r1,[r4,#0]
;;;131        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000034  1d23              ADDS     r3,r4,#4
000036  6819              LDR      r1,[r3,#0]
000038  6805              LDR      r5,[r0,#0]
00003a  43a9              BICS     r1,r1,r5
00003c  6019              STR      r1,[r3,#0]
;;;132        
;;;133        /* Select the trigger for the selected external interrupts */
;;;134        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003e  7941              LDRB     r1,[r0,#5]
000040  2910              CMP      r1,#0x10
000042  d005              BEQ      |L7.80|
;;;135        {
;;;136          /* Rising Falling edge */
;;;137          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;138          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;139        }
;;;140        else
;;;141        {
;;;142          tmp = (uint32_t)EXTI_BASE;
;;;143          tmp += EXTI_InitStruct->EXTI_Trigger;
000044  4411              ADD      r1,r1,r2
;;;144    
;;;145          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000046  680a              LDR      r2,[r1,#0]
000048  6800              LDR      r0,[r0,#0]
00004a  4302              ORRS     r2,r2,r0
00004c  600a              STR      r2,[r1,#0]
;;;146        }
;;;147      }
;;;148      else
;;;149      {
;;;150        tmp += EXTI_InitStruct->EXTI_Mode;
;;;151    
;;;152        /* Disable the selected external lines */
;;;153        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;154      }
;;;155    }
00004e  bd30              POP      {r4,r5,pc}
                  |L7.80|
000050  6821              LDR      r1,[r4,#0]            ;137
000052  6802              LDR      r2,[r0,#0]            ;137
000054  4311              ORRS     r1,r1,r2              ;137
000056  6021              STR      r1,[r4,#0]            ;137
000058  6819              LDR      r1,[r3,#0]            ;138
00005a  6800              LDR      r0,[r0,#0]            ;138
00005c  4301              ORRS     r1,r1,r0              ;138
00005e  6019              STR      r1,[r3,#0]            ;138
000060  bd30              POP      {r4,r5,pc}
                  |L7.98|
000062  7900              LDRB     r0,[r0,#4]            ;150
000064  4410              ADD      r0,r0,r2              ;150
000066  6802              LDR      r2,[r0,#0]            ;153
000068  438a              BICS     r2,r2,r1              ;153
00006a  6002              STR      r2,[r0,#0]            ;153
00006c  bd30              POP      {r4,r5,pc}
;;;156    
                          ENDP

00006e  0000              DCW      0x0000
                  |L7.112|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;162      */
;;;163    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;164    {
;;;165      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
000002  6001              STR      r1,[r0,#0]
;;;166      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;167      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;168      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;169    }
00000c  4770              BX       lr
;;;170    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f10x_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f10x_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
