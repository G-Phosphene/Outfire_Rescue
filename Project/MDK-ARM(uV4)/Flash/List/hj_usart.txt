; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\hj_usart.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\hj_usart.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\User_App -I..\..\User\User_Driver -I..\..\User\Font_And_Bmp -I..\..\User\User_GUI -I..\..\User\Util -I.\RTE\_FreeRTOS_STM32F1 -I"D:\Keil MDK\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include" -I"D:\Keil MDK\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -D__MICROLIB -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\hj_usart.crf ..\..\User\User_Driver\HJ_USART.c]
                          THUMB

                          AREA ||i.wifiControl||, CODE, READONLY, ALIGN=2

                  wifiControl PROC
;;;41     
;;;42     void wifiControl(uint8_t command){
000000  b510              PUSH     {r4,lr}
;;;43     	if(initFlg == 1){
000002  4930              LDR      r1,|L1.196|
000004  7809              LDRB     r1,[r1,#0]  ; initFlg
000006  2901              CMP      r1,#1
000008  d009              BEQ      |L1.30|
;;;44     		switch(command){ 
;;;45     			case RESCUE_STOP:{    //所有舵机停止
;;;46     				app_LeftWheel(FRONT,0);
;;;47     				app_RightWheel(FRONT,0);
;;;48     				break;
;;;49     			}
;;;50     			case RESCUE_FORWARD :  //前1			                     
;;;51     			app_LeftWheel(FRONT,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
;;;52     			app_RightWheel(FRONT,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;53     				break;
;;;54     			case RESCUE_BACK :    //后2
;;;55     				app_LeftWheel(BEHIND,parameter[NAME_GO_STRAIGHT__LEFT_RATE]);
;;;56     			app_RightWheel(BEHIND,parameter[NAME_GO_STRAIGHT__RIGHT_RATE]);
;;;57     				break;
;;;58     			case RESCUE_LEFT :    //左3
;;;59     			   app_LeftWheel(BEHIND,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE]);	
;;;60     				 app_RightWheel(FRONT,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE]);
;;;61     				break;
;;;62     			case RESCUE_RIGHT :   //右4    
;;;63     					app_LeftWheel(FRONT,parameter[NAME_REVERSE_LEFT_TURN__LEFT_RATE]);				
;;;64     			   app_RightWheel(BEHIND,parameter[NAME_REVERSE_LEFT_TURN__RIGHT_RATE]);
;;;65     				break;
;;;66     			case CLAW_UP :        //爪子张开自动任务5
;;;67     			rescue_AUTOTASK_PUTCLAW();
;;;68     			//
;;;69     				break;
;;;70     			case CLAW_DOWN :     //爪子抓取自动任务6
;;;71     			rescue_AUTOTASK_HOLDCLAW();
;;;72     				//
;;;73     				break;
;;;74     			case CLAW_HOLD :     //寻物时相机位置7
;;;75     				app_CAMERA_UPorDOWN(camera_DOWN,170);
;;;76     		 //
;;;77     				break;
;;;78     			case 0x38 :
;;;79     				app_CAMERA_UPorDOWN(camera_DOWN,118);
;;;80     			 break;
;;;81     			default:
;;;82     			break;
;;;83     		}
;;;84     	}
;;;85     	else{
;;;86     		command = RESCUE_STOP;
;;;87     		app_LeftWheel(FRONT,0);
00000a  2100              MOVS     r1,#0
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       app_LeftWheel
;;;88     		app_RightWheel(FRONT,0);
000012  2100              MOVS     r1,#0
000014  e8bd4010          POP      {r4,lr}
000018  2001              MOVS     r0,#1
00001a  f7ffbffe          B.W      app_RightWheel
                  |L1.30|
00001e  4c2a              LDR      r4,|L1.200|
000020  3830              SUBS     r0,r0,#0x30           ;44
000022  2809              CMP      r0,#9                 ;44
000024  6e62              LDR      r2,[r4,#0x64]         ;44
000026  6d61              LDR      r1,[r4,#0x54]         ;44
000028  d24a              BCS      |L1.192|
00002a  e8dff000          TBB      [pc,r0]               ;44
00002e  050f              DCB      0x05,0x0f
000030  19232c35          DCB      0x19,0x23,0x2c,0x35
000034  393d4300          DCB      0x39,0x3d,0x43,0x00
000038  2100              MOVS     r1,#0                 ;46
00003a  2001              MOVS     r0,#1                 ;46
00003c  f7fffffe          BL       app_LeftWheel
000040  2100              MOVS     r1,#0                 ;47
000042  e8bd4010          POP      {r4,lr}               ;47
000046  2001              MOVS     r0,#1                 ;47
000048  f7ffbffe          B.W      app_RightWheel
00004c  4611              MOV      r1,r2                 ;51
00004e  2001              MOVS     r0,#1                 ;51
000050  f7fffffe          BL       app_LeftWheel
000054  6ea1              LDR      r1,[r4,#0x68]         ;52  ; parameter
000056  e8bd4010          POP      {r4,lr}               ;52
00005a  2001              MOVS     r0,#1                 ;52
00005c  f7ffbffe          B.W      app_RightWheel
000060  4611              MOV      r1,r2                 ;55
000062  2002              MOVS     r0,#2                 ;55
000064  f7fffffe          BL       app_LeftWheel
000068  6ea1              LDR      r1,[r4,#0x68]         ;56  ; parameter
00006a  e8bd4010          POP      {r4,lr}               ;56
00006e  2002              MOVS     r0,#2                 ;56
000070  f7ffbffe          B.W      app_RightWheel
000074  2002              MOVS     r0,#2                 ;59
000076  f7fffffe          BL       app_LeftWheel
00007a  6da1              LDR      r1,[r4,#0x58]         ;60  ; parameter
00007c  e8bd4010          POP      {r4,lr}               ;60
000080  2001              MOVS     r0,#1                 ;60
000082  f7ffbffe          B.W      app_RightWheel
000086  2001              MOVS     r0,#1                 ;63
000088  f7fffffe          BL       app_LeftWheel
00008c  6da1              LDR      r1,[r4,#0x58]         ;64  ; parameter
00008e  e8bd4010          POP      {r4,lr}               ;64
000092  2002              MOVS     r0,#2                 ;64
000094  f7ffbffe          B.W      app_RightWheel
000098  e8bd4010          POP      {r4,lr}               ;67
00009c  f7ffbffe          B.W      rescue_AUTOTASK_PUTCLAW
0000a0  e8bd4010          POP      {r4,lr}               ;71
0000a4  f7ffbffe          B.W      rescue_AUTOTASK_HOLDCLAW
0000a8  21aa              MOVS     r1,#0xaa              ;75
0000aa  e8bd4010          POP      {r4,lr}               ;75
0000ae  2002              MOVS     r0,#2                 ;75
0000b0  f7ffbffe          B.W      app_CAMERA_UPorDOWN
0000b4  2176              MOVS     r1,#0x76              ;79
0000b6  e8bd4010          POP      {r4,lr}               ;79
0000ba  2002              MOVS     r0,#2                 ;79
0000bc  f7ffbffe          B.W      app_CAMERA_UPorDOWN
                  |L1.192|
;;;89     	}
;;;90     }
0000c0  bd10              POP      {r4,pc}
                          ENDP

0000c2  0000              DCW      0x0000
                  |L1.196|
                          DCD      initFlg
                  |L1.200|
                          DCD      parameter

                          AREA ||i.wifi_Init||, CODE, READONLY, ALIGN=2

                  wifi_Init PROC
;;;2      
;;;3      void wifi_Init(void){
000000  b530              PUSH     {r4,r5,lr}
000002  b087              SUB      sp,sp,#0x1c
;;;4      GPIO_InitTypeDef GPIO_InitStructure;
;;;5      	USART_InitTypeDef USART_InitStructure;
;;;6      	NVIC_InitTypeDef NVIC_InitStructure;
;;;7      	 
;;;8      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1|RCC_APB2Periph_GPIOA, ENABLE);	//使能USART1，GPIOA时钟
000004  2101              MOVS     r1,#1
000006  f2440004          MOV      r0,#0x4004
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;9        
;;;10     	//USART1_TX   GPIOA.9
;;;11       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; //PA.9
00000e  f44f7000          MOV      r0,#0x200
000012  f8ad0018          STRH     r0,[sp,#0x18]
;;;12       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2403              MOVS     r4,#3
000018  f88d401a          STRB     r4,[sp,#0x1a]
;;;13       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;	//复用推挽输出
00001c  2018              MOVS     r0,#0x18
00001e  f88d001b          STRB     r0,[sp,#0x1b]
;;;14       GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.9
000022  4d1e              LDR      r5,|L2.156|
000024  a906              ADD      r1,sp,#0x18
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GPIO_Init
;;;15        
;;;16       //USART1_RX	  GPIOA.10初始化
;;;17       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//PA10
00002c  1529              ASRS     r1,r5,#20
00002e  f8ad1018          STRH     r1,[sp,#0x18]
;;;18       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//浮空输入
000032  2104              MOVS     r1,#4
000034  f88d101b          STRB     r1,[sp,#0x1b]
;;;19       GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.10  
000038  a906              ADD      r1,sp,#0x18
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GPIO_Init
;;;20     
;;;21       //Usart1 NVIC 配置
;;;22       NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
000040  2025              MOVS     r0,#0x25
000042  f88d0004          STRB     r0,[sp,#4]
;;;23     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3 ;//抢占优先级3
000046  f88d4005          STRB     r4,[sp,#5]
;;;24     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;		//子优先级3
00004a  f88d4006          STRB     r4,[sp,#6]
;;;25     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			//IRQ通道使能
00004e  2001              MOVS     r0,#1
000050  f88d0007          STRB     r0,[sp,#7]
;;;26     	NVIC_Init(&NVIC_InitStructure);	//根据指定的参数初始化VIC寄存器
000054  a801              ADD      r0,sp,#4
000056  f7fffffe          BL       NVIC_Init
;;;27       
;;;28        //USART 初始化设置
;;;29     
;;;30     	USART_InitStructure.USART_BaudRate = WIFI_BAUD;//串口波特率
00005a  f44f5016          MOV      r0,#0x2580
00005e  9002              STR      r0,[sp,#8]
;;;31     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为8位数据格式
000060  2000              MOVS     r0,#0
000062  f8ad000c          STRH     r0,[sp,#0xc]
;;;32     	USART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位
000066  f8ad000e          STRH     r0,[sp,#0xe]
;;;33     	USART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位
00006a  f8ad0010          STRH     r0,[sp,#0x10]
;;;34     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;//无硬件数据流控制
00006e  f8ad0014          STRH     r0,[sp,#0x14]
;;;35     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;	//收发模式
000072  200c              MOVS     r0,#0xc
000074  f8ad0012          STRH     r0,[sp,#0x12]
;;;36     
;;;37       USART_Init(USART1, &USART_InitStructure); //初始化串口1
000078  4c09              LDR      r4,|L2.160|
00007a  a902              ADD      r1,sp,#8
00007c  4620              MOV      r0,r4
00007e  f7fffffe          BL       USART_Init
;;;38       USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//开启串口接受中断
000082  2201              MOVS     r2,#1
000084  f2405125          MOV      r1,#0x525
000088  4620              MOV      r0,r4
00008a  f7fffffe          BL       USART_ITConfig
;;;39       USART_Cmd(USART1, ENABLE);                    //使能串口1 
00008e  2101              MOVS     r1,#1
000090  4620              MOV      r0,r4
000092  f7fffffe          BL       USART_Cmd
;;;40     }
000096  b007              ADD      sp,sp,#0x1c
000098  bd30              POP      {r4,r5,pc}
;;;41     
                          ENDP

00009a  0000              DCW      0x0000
                  |L2.156|
                          DCD      0x40010800
                  |L2.160|
                          DCD      0x40013800

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\User_Driver\\HJ_USART.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_HJ_USART_c_87b3ea23____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_HJ_USART_c_87b3ea23____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_HJ_USART_c_87b3ea23____REVSH|
#line 128
|__asm___10_HJ_USART_c_87b3ea23____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
